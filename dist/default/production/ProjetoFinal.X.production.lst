

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Dec 09 22:46:07 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4520 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	idataCOMRAM
    77  006E8E                     __pidataCOMRAM:
    78                           	callstack 0
    79                           
    80                           ;initializer for print@F2423
    81  006E8E  4D                 	db	77
    82  006E8F  65                 	db	101
    83  006E90  74                 	db	116
    84  006E91  72                 	db	114
    85  006E92  6F                 	db	111
    86  006E93  6E                 	db	110
    87  006E94  6F                 	db	111
    88  006E95  6D                 	db	109
    89  006E96  6F                 	db	111
    90  006E97  3A                 	db	58
    91  006E98  00                 	db	0
    92                           
    93                           ;initializer for print@F2425
    94  006E99  20                 	db	32
    95  006E9A  4F                 	db	79
    96  006E9B  46                 	db	70
    97  006E9C  46                 	db	70
    98  006E9D  00                 	db	0
    99                           
   100                           ;initializer for _velocity
   101  006E9E  50                 	db	80
   102                           
   103                           ;initializer for _flag
   104  006E9F  C0                 	db	192
   105                           
   106                           ;initializer for _bpm
   107  006EA0  0078               	dw	120
   108  0000                     _T0CON	set	4053
   109  0000                     _TMR0L	set	4054
   110  0000                     _TMR0H	set	4055
   111  0000                     _INTCON	set	4082
   112  0000                     _SPBRG	set	4015
   113  0000                     _SPBRGH	set	4016
   114  0000                     _BAUDCON	set	4024
   115  0000                     _TXSTA	set	4012
   116  0000                     _RCREG	set	4014
   117  0000                     _RCSTA	set	4011
   118  0000                     _TXREG	set	4013
   119  0000                     _PIR1	set	3998
   120  0000                     _TRISE	set	3990
   121  0000                     _TRISD	set	3989
   122  0000                     _TRISC	set	3988
   123  0000                     _TRISB	set	3987
   124  0000                     _TRISA	set	3986
   125  0000                     _PORTE	set	3972
   126  0000                     _PORTD	set	3971
   127  0000                     _PORTC	set	3970
   128  0000                     _PORTB	set	3969
   129  0000                     _PORTA	set	3968
   130  0000                     _ADRESL	set	4035
   131  0000                     _ADRESH	set	4036
   132  0000                     _ADCON0bits	set	4034
   133  0000                     _ADCON2	set	4032
   134  0000                     _ADCON1	set	4033
   135  0000                     _ADCON0	set	4034
   136                           
   137                           ; #config settings
   138                           
   139                           	psect	cinit
   140  006F80                     __pcinit:
   141                           	callstack 0
   142  006F80                     start_initialization:
   143                           	callstack 0
   144  006F80                     __initialization:
   145                           	callstack 0
   146                           
   147                           ; Initialize objects allocated to COMRAM (20 bytes)
   148                           ; load TBLPTR registers with __pidataCOMRAM
   149  006F80  0E8E               	movlw	low __pidataCOMRAM
   150  006F82  6EF6               	movwf	tblptrl,c
   151  006F84  0E6E               	movlw	high __pidataCOMRAM
   152  006F86  6EF7               	movwf	tblptrh,c
   153  006F88  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   154  006F8A  6EF8               	movwf	tblptru,c
   155  006F8C  EE00  F02B         	lfsr	0,__pdataCOMRAM
   156  006F90  EE10 F014          	lfsr	1,20
   157  006F94                     copy_data0:
   158  006F94  0009               	tblrd		*+
   159  006F96  CFF5 FFEE          	movff	tablat,postinc0
   160  006F9A  50E5               	movf	postdec1,w,c
   161  006F9C  50E1               	movf	fsr1l,w,c
   162  006F9E  E1FA               	bnz	copy_data0
   163                           
   164                           ; Clear objects allocated to COMRAM (11 bytes)
   165  006FA0  EE00  F03F         	lfsr	0,__pbssCOMRAM
   166  006FA4  0E0B               	movlw	11
   167  006FA6                     clear_0:
   168  006FA6  6AEE               	clrf	postinc0,c
   169  006FA8  06E8               	decf	wreg,f,c
   170  006FAA  E1FD               	bnz	clear_0
   171  006FAC                     end_of_initialization:
   172                           	callstack 0
   173  006FAC                     __end_of__initialization:
   174                           	callstack 0
   175  006FAC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   176  006FAE  6EF8               	movwf	tblptru,c
   177  006FB0  0100               	movlb	0
   178  006FB2  EFAA  F03E         	goto	_main	;jump to C main() function
   179                           
   180                           	psect	bssCOMRAM
   181  00003F                     __pbssCOMRAM:
   182                           	callstack 0
   183  00003F                     _countMetronMax:
   184                           	callstack 0
   185  00003F                     	ds	2
   186  000041                     _countMetron:
   187                           	callstack 0
   188  000041                     	ds	2
   189  000043                     _valor:
   190                           	callstack 0
   191  000043                     	ds	2
   192  000045                     _valorAntigo:
   193                           	callstack 0
   194  000045                     	ds	2
   195  000047                     _valorNovo:
   196                           	callstack 0
   197  000047                     	ds	2
   198  000049                     _tempo:
   199                           	callstack 0
   200  000049                     	ds	1
   201                           
   202                           	psect	dataCOMRAM
   203  00002B                     __pdataCOMRAM:
   204                           	callstack 0
   205  00002B                     print@F2423:
   206                           	callstack 0
   207  00002B                     	ds	11
   208  000036                     print@F2425:
   209                           	callstack 0
   210  000036                     	ds	5
   211  00003B                     _velocity:
   212                           	callstack 0
   213  00003B                     	ds	1
   214  00003C                     _flag:
   215                           	callstack 0
   216  00003C                     	ds	1
   217  00003D                     _bpm:
   218                           	callstack 0
   219  00003D                     	ds	2
   220                           
   221                           	psect	cstackCOMRAM
   222  000001                     __pcstackCOMRAM:
   223                           	callstack 0
   224  000001                     ??_kpDebounce:
   225  000001                     ?_adc_amostra:
   226                           	callstack 0
   227  000001                     ?_kpRead:
   228                           	callstack 0
   229  000001                     ?___wmul:
   230                           	callstack 0
   231  000001                     ?___awdiv:
   232                           	callstack 0
   233  000001                     Delay40us@i:
   234                           	callstack 0
   235  000001                     serialSend@c:
   236                           	callstack 0
   237  000001                     digitalWrite@pin:
   238                           	callstack 0
   239  000001                     pinMode@pin:
   240                           	callstack 0
   241  000001                     timerReset@tempo:
   242                           	callstack 0
   243  000001                     ___wmul@multiplier:
   244                           	callstack 0
   245  000001                     ___awdiv@dividend:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x0
   249  000001                     	ds	1
   250  000002                     Delay2ms@i:
   251                           	callstack 0
   252  000002                     tocarSom@key:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x1
   256  000002                     	ds	1
   257  000003                     ??_adc_amostra:
   258  000003                     digitalWrite@value:
   259                           	callstack 0
   260  000003                     pinMode@type:
   261                           	callstack 0
   262  000003                     timerReset@ciclos:
   263                           	callstack 0
   264  000003                     ___wmul@multiplicand:
   265                           	callstack 0
   266  000003                     ___awdiv@divisor:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0x2
   270  000003                     	ds	2
   271  000005                     ??_digitalWrite:
   272  000005                     ??_pinMode:
   273  000005                     ___awdiv@counter:
   274                           	callstack 0
   275  000005                     ___wmul@product:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x4
   279  000005                     	ds	1
   280  000006                     kpDebounce@old_portD:
   281                           	callstack 0
   282  000006                     ___awdiv@sign:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x5
   286  000006                     	ds	1
   287  000007                     ?___aldiv:
   288                           	callstack 0
   289  000007                     kpDebounce@old_portB:
   290                           	callstack 0
   291  000007                     lcdCommand@old_D:
   292                           	callstack 0
   293  000007                     lcdData@valor:
   294                           	callstack 0
   295  000007                     ___awdiv@quotient:
   296                           	callstack 0
   297  000007                     ___aldiv@dividend:
   298                           	callstack 0
   299                           
   300                           ; 4 bytes @ 0x6
   301  000007                     	ds	1
   302  000008                     kpDebounce@old_trisD:
   303                           	callstack 0
   304  000008                     lcdCommand@cmd:
   305                           	callstack 0
   306  000008                     lcdData@old_D:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0x7
   310  000008                     	ds	1
   311  000009                     ?___awmod:
   312                           	callstack 0
   313  000009                     kpDebounce@old_trisB:
   314                           	callstack 0
   315  000009                     ___awmod@dividend:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x8
   319  000009                     	ds	1
   320  00000A                     kpDebounce@k:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x9
   324  00000A                     	ds	1
   325  00000B                     ___awmod@divisor:
   326                           	callstack 0
   327  00000B                     ___aldiv@divisor:
   328                           	callstack 0
   329                           
   330                           ; 4 bytes @ 0xA
   331  00000B                     	ds	1
   332  00000C                     kpDebounce@j:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0xB
   336  00000C                     	ds	1
   337  00000D                     kpDebounce@i:
   338                           	callstack 0
   339  00000D                     ___awmod@counter:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0xC
   343  00000D                     	ds	1
   344  00000E                     ___awmod@sign:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0xD
   348  00000E                     	ds	1
   349  00000F                     ___aldiv@counter:
   350                           	callstack 0
   351  00000F                     print@admt:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0xE
   355  00000F                     	ds	1
   356  000010                     ___aldiv@sign:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0xF
   360  000010                     	ds	1
   361  000011                     ??_print:
   362  000011                     ___aldiv@quotient:
   363                           	callstack 0
   364                           
   365                           ; 4 bytes @ 0x10
   366  000011                     	ds	2
   367  000013                     print@off:
   368                           	callstack 0
   369                           
   370                           ; 5 bytes @ 0x12
   371  000013                     	ds	5
   372  000018                     print@msg:
   373                           	callstack 0
   374                           
   375                           ; 11 bytes @ 0x17
   376  000018                     	ds	11
   377  000023                     print@i:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0x22
   381  000023                     	ds	1
   382  000024                     ??_main:
   383                           
   384                           ; 1 bytes @ 0x23
   385  000024                     	ds	2
   386  000026                     main@valorTeclado:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x25
   390  000026                     	ds	2
   391  000028                     main@n:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0x27
   395  000028                     	ds	1
   396  000029                     main@i:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x28
   400  000029                     	ds	2
   401                           
   402 ;;
   403 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   404 ;;
   405 ;; *************** function _main *****************
   406 ;; Defined at:
   407 ;;		line 84 in file "main_projeto.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;  i               2   40[COMRAM] int 
   412 ;;  valorTeclado    2   37[COMRAM] unsigned int 
   413 ;;  n               1   39[COMRAM] unsigned char 
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   423 ;;      Params:         0       0       0       0       0       0       0
   424 ;;      Locals:         5       0       0       0       0       0       0
   425 ;;      Temps:          2       0       0       0       0       0       0
   426 ;;      Totals:         7       0       0       0       0       0       0
   427 ;;Total ram usage:        7 bytes
   428 ;; Hardware stack levels required when called:    5
   429 ;; This function calls:
   430 ;;		___aldiv
   431 ;;		___wmul
   432 ;;		_checarADC
   433 ;;		_checarLCD
   434 ;;		_checarTimer
   435 ;;		_kpDebounce
   436 ;;		_kpInit
   437 ;;		_kpRead
   438 ;;		_lcdInit
   439 ;;		_print
   440 ;;		_serialInit
   441 ;;		_timerInit
   442 ;;		_timerReset
   443 ;;		_timerWait
   444 ;;		_tocarSom
   445 ;; This function is called by:
   446 ;;		Startup code after reset
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           	psect	text0
   451  007D54                     __ptext0:
   452                           	callstack 0
   453  007D54                     _main:
   454                           	callstack 26
   455  007D54                     
   456                           ;main_projeto.c: 85:   kpInit();
   457  007D54  EC35  F037         	call	_kpInit	;wreg free
   458                           
   459                           ;main_projeto.c: 86:   timerInit();
   460  007D58  EC31  F037         	call	_timerInit	;wreg free
   461                           
   462                           ;main_projeto.c: 87:   serialInit();
   463  007D5C  EC73  F037         	call	_serialInit	;wreg free
   464                           
   465                           ;main_projeto.c: 88:   lcdInit();
   466  007D60  EC7E  F038         	call	_lcdInit	;wreg free
   467  007D64                     
   468                           ;main_projeto.c: 91:   countMetronMax = 60000/(5*bpm);
   469  007D64  0E60               	movlw	96
   470  007D66  6E07               	movwf	___aldiv@dividend^0,c
   471  007D68  0EEA               	movlw	234
   472  007D6A  6E08               	movwf	(___aldiv@dividend+1)^0,c
   473  007D6C  0E00               	movlw	0
   474  007D6E  6E09               	movwf	(___aldiv@dividend+2)^0,c
   475  007D70  0E00               	movlw	0
   476  007D72  6E0A               	movwf	(___aldiv@dividend+3)^0,c
   477  007D74  C03D  F001         	movff	_bpm,___wmul@multiplier
   478  007D78  C03E  F002         	movff	_bpm+1,___wmul@multiplier+1
   479  007D7C  0E00               	movlw	0
   480  007D7E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   481  007D80  0E05               	movlw	5
   482  007D82  6E03               	movwf	___wmul@multiplicand^0,c
   483  007D84  ECAD  F037         	call	___wmul	;wreg free
   484  007D88  C001  F00B         	movff	?___wmul,___aldiv@divisor
   485  007D8C  C002  F00C         	movff	?___wmul+1,___aldiv@divisor+1
   486  007D90  6A0D               	clrf	(___aldiv@divisor+2)^0,c
   487  007D92  6A0E               	clrf	(___aldiv@divisor+3)^0,c
   488  007D94  ECB3  F039         	call	___aldiv	;wreg free
   489  007D98  C007  F03F         	movff	?___aldiv,_countMetronMax
   490  007D9C  C008  F040         	movff	?___aldiv+1,_countMetronMax+1
   491  007DA0                     
   492                           ;main_projeto.c: 94:   print(bpm);
   493  007DA0  C03D  F00F         	movff	_bpm,print@admt
   494  007DA4  C03E  F010         	movff	_bpm+1,print@admt+1
   495  007DA8  EC54  F03D         	call	_print	;wreg free
   496  007DAC                     
   497                           ;main_projeto.c: 96:   unsigned int valorTeclado;;main_projeto.c: 97:   unsigned char n 
      +                          = 0;
   498  007DAC  0E00               	movlw	0
   499  007DAE  6E28               	movwf	main@n^0,c
   500  007DB0                     l2125:
   501                           
   502                           ;main_projeto.c: 101:     timerReset(5000);
   503  007DB0  0E13               	movlw	19
   504  007DB2  6E02               	movwf	(timerReset@tempo+1)^0,c
   505  007DB4  0E88               	movlw	136
   506  007DB6  6E01               	movwf	timerReset@tempo^0,c
   507  007DB8  EC9C  F037         	call	_timerReset	;wreg free
   508                           
   509                           ;main_projeto.c: 104:     switch (n){
   510  007DBC  EFEC  F03E         	goto	l2139
   511  007DC0                     l2127:
   512  007DC0  EC80  F037         	call	_checarADC	;wreg free
   513  007DC4                     
   514                           ;main_projeto.c: 106:               n = 1;
   515  007DC4  0E01               	movlw	1
   516  007DC6  6E28               	movwf	main@n^0,c
   517                           
   518                           ;main_projeto.c: 107:               break;
   519  007DC8  EF01  F03F         	goto	l2141
   520  007DCC                     l2131:
   521  007DCC  EC50  F038         	call	_checarLCD	;wreg free
   522  007DD0                     l2133:
   523                           
   524                           ;main_projeto.c: 109:               n = 0;
   525  007DD0  0E00               	movlw	0
   526  007DD2  6E28               	movwf	main@n^0,c
   527                           
   528                           ;main_projeto.c: 110:               break;
   529  007DD4  EF01  F03F         	goto	l2141
   530  007DD8                     l2139:
   531  007DD8  5028               	movf	main@n^0,w,c
   532  007DDA  6E24               	movwf	??_main^0,c
   533  007DDC  6A25               	clrf	(??_main+1)^0,c
   534                           
   535                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   536                           ; Switch size 1, requested type "simple"
   537                           ; Number of cases is 1, Range of values is 0 to 0
   538                           ; switch strategies available:
   539                           ; Name         Instructions Cycles
   540                           ; simple_byte            4     3 (average)
   541                           ;	Chosen strategy is simple_byte
   542  007DDE  5025               	movf	(??_main+1)^0,w,c
   543  007DE0  0A00               	xorlw	0	; case 0
   544  007DE2  B4D8               	btfsc	status,2,c
   545  007DE4  EFF6  F03E         	goto	l2255
   546  007DE8  EFE8  F03E         	goto	l2133
   547  007DEC                     l2255:
   548                           
   549                           ; Switch size 1, requested type "simple"
   550                           ; Number of cases is 2, Range of values is 0 to 1
   551                           ; switch strategies available:
   552                           ; Name         Instructions Cycles
   553                           ; simple_byte            7     4 (average)
   554                           ;	Chosen strategy is simple_byte
   555  007DEC  5024               	movf	??_main^0,w,c
   556  007DEE  0A00               	xorlw	0	; case 0
   557  007DF0  B4D8               	btfsc	status,2,c
   558  007DF2  EFE0  F03E         	goto	l2127
   559  007DF6  0A01               	xorlw	1	; case 1
   560  007DF8  B4D8               	btfsc	status,2,c
   561  007DFA  EFE6  F03E         	goto	l2131
   562  007DFE  EFE8  F03E         	goto	l2133
   563  007E02                     l2141:
   564                           
   565                           ;main_projeto.c: 115:     kpDebounce();
   566  007E02  EC39  F03A         	call	_kpDebounce	;wreg free
   567  007E06                     
   568                           ;main_projeto.c: 116:     valorTeclado = kpRead();
   569  007E06  EC3A  F037         	call	_kpRead	;wreg free
   570  007E0A  C001  F026         	movff	?_kpRead,main@valorTeclado
   571  007E0E  C002  F027         	movff	?_kpRead+1,main@valorTeclado+1
   572                           
   573                           ;main_projeto.c: 122:     switch (valorTeclado){
   574  007E12  EF9A  F03F         	goto	l2197
   575  007E16                     l2145:
   576  007E16  0E28               	movlw	40
   577  007E18  EC5C  F037         	call	_tocarSom
   578  007E1C  EFF8  F03F         	goto	l2199
   579  007E20                     l2147:
   580  007E20  0E30               	movlw	48
   581  007E22  EC5C  F037         	call	_tocarSom
   582  007E26  EFF8  F03F         	goto	l2199
   583  007E2A                     l2149:
   584  007E2A  0E3E               	movlw	62
   585  007E2C  EC5C  F037         	call	_tocarSom
   586  007E30  EFF8  F03F         	goto	l2199
   587  007E34                     l2151:
   588  007E34  0E3F               	movlw	63
   589  007E36  EC5C  F037         	call	_tocarSom
   590  007E3A  EFF8  F03F         	goto	l2199
   591  007E3E                     l2153:
   592  007E3E  0E47               	movlw	71
   593  007E40  EC5C  F037         	call	_tocarSom
   594  007E44  EFF8  F03F         	goto	l2199
   595  007E48                     l2155:
   596  007E48  0E49               	movlw	73
   597  007E4A  EC5C  F037         	call	_tocarSom
   598  007E4E  EFF8  F03F         	goto	l2199
   599  007E52                     l2157:
   600  007E52  0E4C               	movlw	76
   601  007E54  EC5C  F037         	call	_tocarSom
   602  007E58  EFF8  F03F         	goto	l2199
   603  007E5C                     l2159:
   604  007E5C  0E50               	movlw	80
   605  007E5E  EC5C  F037         	call	_tocarSom
   606  007E62  EFF8  F03F         	goto	l2199
   607  007E66                     l2161:
   608  007E66  0E51               	movlw	81
   609  007E68  EC5C  F037         	call	_tocarSom
   610  007E6C  EFF8  F03F         	goto	l2199
   611  007E70                     l2163:
   612  007E70  503E               	movf	(_bpm+1)^0,w,c
   613  007E72  E109               	bnz	u1830
   614  007E74  0E02               	movlw	2
   615  007E76  5C3D               	subwf	_bpm^0,w,c
   616  007E78  A0D8               	btfss	status,0,c
   617  007E7A  EF41  F03F         	goto	u1831
   618  007E7E  EF43  F03F         	goto	u1830
   619  007E82                     u1831:
   620  007E82  EF48  F03F         	goto	l2167
   621  007E86                     u1830:
   622  007E86  063D               	decf	_bpm^0,f,c
   623  007E88  A0D8               	btfss	status,0,c
   624  007E8A  063E               	decf	(_bpm+1)^0,f,c
   625  007E8C  EF4C  F03F         	goto	l2169
   626  007E90                     l2167:
   627  007E90  0E00               	movlw	0
   628  007E92  6E3E               	movwf	(_bpm+1)^0,c
   629  007E94  0E01               	movlw	1
   630  007E96  6E3D               	movwf	_bpm^0,c
   631  007E98                     l2169:
   632                           
   633                           ;main_projeto.c: 135:                  ((flag) &= ~(1<<(6)));
   634  007E98  9C3C               	bcf	_flag^0,6,c
   635  007E9A                     
   636                           ;main_projeto.c: 136:                  countMetronMax = 60000/(5*bpm);
   637  007E9A  0E60               	movlw	96
   638  007E9C  6E07               	movwf	___aldiv@dividend^0,c
   639  007E9E  0EEA               	movlw	234
   640  007EA0  6E08               	movwf	(___aldiv@dividend+1)^0,c
   641  007EA2  0E00               	movlw	0
   642  007EA4  6E09               	movwf	(___aldiv@dividend+2)^0,c
   643  007EA6  0E00               	movlw	0
   644  007EA8  6E0A               	movwf	(___aldiv@dividend+3)^0,c
   645  007EAA  C03D  F001         	movff	_bpm,___wmul@multiplier
   646  007EAE  C03E  F002         	movff	_bpm+1,___wmul@multiplier+1
   647  007EB2  0E00               	movlw	0
   648  007EB4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   649  007EB6  0E05               	movlw	5
   650  007EB8  6E03               	movwf	___wmul@multiplicand^0,c
   651  007EBA  ECAD  F037         	call	___wmul	;wreg free
   652  007EBE  C001  F00B         	movff	?___wmul,___aldiv@divisor
   653  007EC2  C002  F00C         	movff	?___wmul+1,___aldiv@divisor+1
   654  007EC6  6A0D               	clrf	(___aldiv@divisor+2)^0,c
   655  007EC8  6A0E               	clrf	(___aldiv@divisor+3)^0,c
   656  007ECA  ECB3  F039         	call	___aldiv	;wreg free
   657  007ECE  C007  F03F         	movff	?___aldiv,_countMetronMax
   658  007ED2  C008  F040         	movff	?___aldiv+1,_countMetronMax+1
   659                           
   660                           ;main_projeto.c: 137:                  break;
   661  007ED6  EFF8  F03F         	goto	l2199
   662  007EDA                     l2173:
   663  007EDA  0E00               	movlw	0
   664  007EDC  6E2A               	movwf	(main@i+1)^0,c
   665  007EDE  0E00               	movlw	0
   666  007EE0  6E29               	movwf	main@i^0,c
   667  007EE2                     l2179:
   668  007EE2  4A29               	infsnz	main@i^0,f,c
   669  007EE4  2A2A               	incf	(main@i+1)^0,f,c
   670  007EE6  BE2A               	btfsc	(main@i+1)^0,7,c
   671  007EE8  EF7F  F03F         	goto	u1841
   672  007EEC  502A               	movf	(main@i+1)^0,w,c
   673  007EEE  E109               	bnz	u1840
   674  007EF0  0E64               	movlw	100
   675  007EF2  5C29               	subwf	main@i^0,w,c
   676  007EF4  A0D8               	btfss	status,0,c
   677  007EF6  EF7F  F03F         	goto	u1841
   678  007EFA  EF81  F03F         	goto	u1840
   679  007EFE                     u1841:
   680  007EFE  EF71  F03F         	goto	l2179
   681  007F02                     u1840:
   682  007F02                     
   683                           ;main_projeto.c: 139:                  ((flag) ^= (1<<(7)));
   684  007F02  0E80               	movlw	128
   685  007F04  1A3C               	xorwf	_flag^0,f,c
   686                           
   687                           ;main_projeto.c: 140:                  break;
   688  007F06  EFF8  F03F         	goto	l2199
   689  007F0A                     l2185:
   690  007F0A  0E2C               	movlw	44
   691  007F0C  5C3D               	subwf	_bpm^0,w,c
   692  007F0E  0E01               	movlw	1
   693  007F10  583E               	subwfb	(_bpm+1)^0,w,c
   694  007F12  B0D8               	btfsc	status,0,c
   695  007F14  EF8E  F03F         	goto	u1851
   696  007F18  EF90  F03F         	goto	u1850
   697  007F1C                     u1851:
   698  007F1C  EF94  F03F         	goto	l2189
   699  007F20                     u1850:
   700  007F20  4A3D               	infsnz	_bpm^0,f,c
   701  007F22  2A3E               	incf	(_bpm+1)^0,f,c
   702  007F24  EF4C  F03F         	goto	l2169
   703  007F28                     l2189:
   704  007F28  0E01               	movlw	1
   705  007F2A  6E3E               	movwf	(_bpm+1)^0,c
   706  007F2C  0E2C               	movlw	44
   707  007F2E  6E3D               	movwf	_bpm^0,c
   708  007F30  EF4C  F03F         	goto	l2169
   709  007F34                     l2197:
   710  007F34  C026  F024         	movff	main@valorTeclado,??_main
   711  007F38  C027  F025         	movff	main@valorTeclado+1,??_main+1
   712                           
   713                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
   714                           ; Switch size 1, requested type "simple"
   715                           ; Number of cases is 5, Range of values is 0 to 8
   716                           ; switch strategies available:
   717                           ; Name         Instructions Cycles
   718                           ; simple_byte           16     9 (average)
   719                           ;	Chosen strategy is simple_byte
   720  007F3C  5025               	movf	(??_main+1)^0,w,c
   721  007F3E  0A00               	xorlw	0	; case 0
   722  007F40  B4D8               	btfsc	status,2,c
   723  007F42  EFB5  F03F         	goto	l2257
   724  007F46  0A01               	xorlw	1	; case 1
   725  007F48  B4D8               	btfsc	status,2,c
   726  007F4A  EFDC  F03F         	goto	l2259
   727  007F4E  0A03               	xorlw	3	; case 2
   728  007F50  B4D8               	btfsc	status,2,c
   729  007F52  EFE3  F03F         	goto	l2261
   730  007F56  0A06               	xorlw	6	; case 4
   731  007F58  B4D8               	btfsc	status,2,c
   732  007F5A  EFEA  F03F         	goto	l2263
   733  007F5E  0A0C               	xorlw	12	; case 8
   734  007F60  B4D8               	btfsc	status,2,c
   735  007F62  EFF1  F03F         	goto	l2265
   736  007F66  EFF8  F03F         	goto	l2199
   737  007F6A                     l2257:
   738                           
   739                           ; Switch size 1, requested type "simple"
   740                           ; Number of cases is 9, Range of values is 0 to 128
   741                           ; switch strategies available:
   742                           ; Name         Instructions Cycles
   743                           ; simple_byte           28    15 (average)
   744                           ;	Chosen strategy is simple_byte
   745  007F6A  5024               	movf	??_main^0,w,c
   746  007F6C  0A00               	xorlw	0	; case 0
   747  007F6E  B4D8               	btfsc	status,2,c
   748  007F70  EFF8  F03F         	goto	l2199
   749  007F74  0A01               	xorlw	1	; case 1
   750  007F76  B4D8               	btfsc	status,2,c
   751  007F78  EF38  F03F         	goto	l2163
   752  007F7C  0A03               	xorlw	3	; case 2
   753  007F7E  B4D8               	btfsc	status,2,c
   754  007F80  EF29  F03F         	goto	l2157
   755  007F84  0A06               	xorlw	6	; case 4
   756  007F86  B4D8               	btfsc	status,2,c
   757  007F88  EF1A  F03F         	goto	l2151
   758  007F8C  0A0C               	xorlw	12	; case 8
   759  007F8E  B4D8               	btfsc	status,2,c
   760  007F90  EF0B  F03F         	goto	l2145
   761  007F94  0A18               	xorlw	24	; case 16
   762  007F96  B4D8               	btfsc	status,2,c
   763  007F98  EF6D  F03F         	goto	l2173
   764  007F9C  0A30               	xorlw	48	; case 32
   765  007F9E  B4D8               	btfsc	status,2,c
   766  007FA0  EF2E  F03F         	goto	l2159
   767  007FA4  0A60               	xorlw	96	; case 64
   768  007FA6  B4D8               	btfsc	status,2,c
   769  007FA8  EF1F  F03F         	goto	l2153
   770  007FAC  0AC0               	xorlw	192	; case 128
   771  007FAE  B4D8               	btfsc	status,2,c
   772  007FB0  EF10  F03F         	goto	l2147
   773  007FB4  EFF8  F03F         	goto	l2199
   774  007FB8                     l2259:
   775                           
   776                           ; Switch size 1, requested type "simple"
   777                           ; Number of cases is 1, Range of values is 0 to 0
   778                           ; switch strategies available:
   779                           ; Name         Instructions Cycles
   780                           ; simple_byte            4     3 (average)
   781                           ;	Chosen strategy is simple_byte
   782  007FB8  5024               	movf	??_main^0,w,c
   783  007FBA  0A00               	xorlw	0	; case 0
   784  007FBC  B4D8               	btfsc	status,2,c
   785  007FBE  EF85  F03F         	goto	l2185
   786  007FC2  EFF8  F03F         	goto	l2199
   787  007FC6                     l2261:
   788                           
   789                           ; Switch size 1, requested type "simple"
   790                           ; Number of cases is 1, Range of values is 0 to 0
   791                           ; switch strategies available:
   792                           ; Name         Instructions Cycles
   793                           ; simple_byte            4     3 (average)
   794                           ;	Chosen strategy is simple_byte
   795  007FC6  5024               	movf	??_main^0,w,c
   796  007FC8  0A00               	xorlw	0	; case 0
   797  007FCA  B4D8               	btfsc	status,2,c
   798  007FCC  EF33  F03F         	goto	l2161
   799  007FD0  EFF8  F03F         	goto	l2199
   800  007FD4                     l2263:
   801                           
   802                           ; Switch size 1, requested type "simple"
   803                           ; Number of cases is 1, Range of values is 0 to 0
   804                           ; switch strategies available:
   805                           ; Name         Instructions Cycles
   806                           ; simple_byte            4     3 (average)
   807                           ;	Chosen strategy is simple_byte
   808  007FD4  5024               	movf	??_main^0,w,c
   809  007FD6  0A00               	xorlw	0	; case 0
   810  007FD8  B4D8               	btfsc	status,2,c
   811  007FDA  EF24  F03F         	goto	l2155
   812  007FDE  EFF8  F03F         	goto	l2199
   813  007FE2                     l2265:
   814                           
   815                           ; Switch size 1, requested type "simple"
   816                           ; Number of cases is 1, Range of values is 0 to 0
   817                           ; switch strategies available:
   818                           ; Name         Instructions Cycles
   819                           ; simple_byte            4     3 (average)
   820                           ;	Chosen strategy is simple_byte
   821  007FE2  5024               	movf	??_main^0,w,c
   822  007FE4  0A00               	xorlw	0	; case 0
   823  007FE6  B4D8               	btfsc	status,2,c
   824  007FE8  EF15  F03F         	goto	l2149
   825  007FEC  EFF8  F03F         	goto	l2199
   826  007FF0                     l2199:
   827                           
   828                           ;main_projeto.c: 149:     timerWait();
   829  007FF0  EC3F  F037         	call	_timerWait	;wreg free
   830  007FF4                     
   831                           ;main_projeto.c: 150:     checarTimer();
   832  007FF4  ECFD  F037         	call	_checarTimer	;wreg free
   833                           
   834                           ;main_projeto.c: 151:   }
   835  007FF8  EFD8  F03E         	goto	l2125
   836  007FFC  EF00  F000         	goto	start
   837  008000                     __end_of_main:
   838                           	callstack 0
   839                           
   840 ;; *************** function _tocarSom *****************
   841 ;; Defined at:
   842 ;;		line 43 in file "main_projeto.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  key             1    wreg     unsigned char 
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  key             1    1[COMRAM] unsigned char 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		wreg, status,2, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   856 ;;      Params:         0       0       0       0       0       0       0
   857 ;;      Locals:         1       0       0       0       0       0       0
   858 ;;      Temps:          0       0       0       0       0       0       0
   859 ;;      Totals:         1       0       0       0       0       0       0
   860 ;;Total ram usage:        1 bytes
   861 ;; Hardware stack levels used:    1
   862 ;; Hardware stack levels required when called:    1
   863 ;; This function calls:
   864 ;;		_serialSend
   865 ;; This function is called by:
   866 ;;		_main
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text1
   871  006EB8                     __ptext1:
   872                           	callstack 0
   873  006EB8                     _tocarSom:
   874                           	callstack 29
   875                           
   876                           ;incstack = 0
   877                           ;tocarSom@key stored from wreg
   878  006EB8  6E02               	movwf	tocarSom@key^0,c
   879  006EBA                     
   880                           ;main_projeto.c: 44:   serialSend(0x90);
   881  006EBA  0E90               	movlw	144
   882  006EBC  EC51  F037         	call	_serialSend
   883  006EC0                     
   884                           ;main_projeto.c: 45:   serialSend(key);
   885  006EC0  5002               	movf	tocarSom@key^0,w,c
   886  006EC2  EC51  F037         	call	_serialSend
   887  006EC6                     
   888                           ;main_projeto.c: 46:   serialSend(velocity);
   889  006EC6  503B               	movf	_velocity^0,w,c
   890  006EC8  EC51  F037         	call	_serialSend
   891  006ECC  0012               	return		;funcret
   892  006ECE                     __end_of_tocarSom:
   893                           	callstack 0
   894                           
   895 ;; *************** function _serialSend *****************
   896 ;; Defined at:
   897 ;;		line 25 in file "serial.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  c               1    wreg     unsigned char 
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  c               1    0[COMRAM] unsigned char 
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   911 ;;      Params:         0       0       0       0       0       0       0
   912 ;;      Locals:         1       0       0       0       0       0       0
   913 ;;      Temps:          0       0       0       0       0       0       0
   914 ;;      Totals:         1       0       0       0       0       0       0
   915 ;;Total ram usage:        1 bytes
   916 ;; Hardware stack levels used:    1
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_tocarSom
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text2
   925  006EA2                     __ptext2:
   926                           	callstack 0
   927  006EA2                     _serialSend:
   928                           	callstack 29
   929                           
   930                           ;incstack = 0
   931                           ;serialSend@c stored from wreg
   932  006EA2  6E01               	movwf	serialSend@c^0,c
   933  006EA4                     l212:
   934  006EA4  A89E               	btfss	158,4,c	;volatile
   935  006EA6  EF57  F037         	goto	u681
   936  006EAA  EF59  F037         	goto	u680
   937  006EAE                     u681:
   938  006EAE  EF52  F037         	goto	l212
   939  006EB2                     u680:
   940  006EB2                     
   941                           ;serial.c: 27:     TXREG = c;
   942  006EB2  C001  FFAD         	movff	serialSend@c,4013	;volatile
   943  006EB6  0012               	return		;funcret
   944  006EB8                     __end_of_serialSend:
   945                           	callstack 0
   946                           
   947 ;; *************** function _timerWait *****************
   948 ;; Defined at:
   949 ;;		line 30 in file "timer.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		None
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   963 ;;      Params:         0       0       0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0
   965 ;;      Temps:          0       0       0       0       0       0       0
   966 ;;      Totals:         0       0       0       0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_main
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text3
   977  006E7E                     __ptext3:
   978                           	callstack 0
   979  006E7E                     _timerWait:
   980                           	callstack 30
   981  006E7E                     l237:
   982  006E7E  A4F2               	btfss	242,2,c	;volatile
   983  006E80  EF44  F037         	goto	u801
   984  006E84  EF46  F037         	goto	u800
   985  006E88                     u801:
   986  006E88  EF3F  F037         	goto	l237
   987  006E8C                     u800:
   988  006E8C  0012               	return		;funcret
   989  006E8E                     __end_of_timerWait:
   990                           	callstack 0
   991                           
   992 ;; *************** function _timerReset *****************
   993 ;; Defined at:
   994 ;;		line 35 in file "timer.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;  tempo           2    0[COMRAM] unsigned int 
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  ciclos          2    2[COMRAM] unsigned int 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, status,2, status,0
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1008 ;;      Params:         2       0       0       0       0       0       0
  1009 ;;      Locals:         2       0       0       0       0       0       0
  1010 ;;      Temps:          0       0       0       0       0       0       0
  1011 ;;      Totals:         4       0       0       0       0       0       0
  1012 ;;Total ram usage:        4 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; This function calls:
  1015 ;;		Nothing
  1016 ;; This function is called by:
  1017 ;;		_main
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text4
  1022  006F38                     __ptext4:
  1023                           	callstack 0
  1024  006F38                     _timerReset:
  1025                           	callstack 30
  1026  006F38                     
  1027                           ;timer.c: 37:  unsigned ciclos = tempo * 2;
  1028  006F38  90D8               	bcf	status,0,c
  1029  006F3A  3401               	rlcf	timerReset@tempo^0,w,c
  1030  006F3C  6E03               	movwf	timerReset@ciclos^0,c
  1031  006F3E  3402               	rlcf	(timerReset@tempo+1)^0,w,c
  1032  006F40  6E04               	movwf	(timerReset@ciclos+1)^0,c
  1033  006F42                     
  1034                           ;timer.c: 39:  ciclos = 65535 - ciclos;
  1035  006F42  1E03               	comf	timerReset@ciclos^0,f,c
  1036  006F44  1E04               	comf	(timerReset@ciclos+1)^0,f,c
  1037  006F46                     
  1038                           ;timer.c: 41:  ciclos -= 14;
  1039  006F46  0E0E               	movlw	14
  1040  006F48  5E03               	subwf	timerReset@ciclos^0,f,c
  1041  006F4A  0E00               	movlw	0
  1042  006F4C  5A04               	subwfb	(timerReset@ciclos+1)^0,f,c
  1043  006F4E                     
  1044                           ;timer.c: 42:  TMR0H = (ciclos >> 8);
  1045  006F4E  5004               	movf	(timerReset@ciclos+1)^0,w,c
  1046  006F50  6ED7               	movwf	215,c	;volatile
  1047  006F52                     
  1048                           ;timer.c: 43:  TMR0L = (ciclos & 0x00FF);
  1049  006F52  C003  FFD6         	movff	timerReset@ciclos,4054	;volatile
  1050  006F56                     
  1051                           ;timer.c: 45:  ((INTCON) &= ~(1<<(2)));
  1052  006F56  94F2               	bcf	242,2,c	;volatile
  1053  006F58  0012               	return		;funcret
  1054  006F5A                     __end_of_timerReset:
  1055                           	callstack 0
  1056                           
  1057 ;; *************** function _timerInit *****************
  1058 ;; Defined at:
  1059 ;;		line 48 in file "timer.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;		None
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;		None
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  1    wreg      void 
  1066 ;; Registers used:
  1067 ;;		wreg, status,2, status,0
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1073 ;;      Params:         0       0       0       0       0       0       0
  1074 ;;      Locals:         0       0       0       0       0       0       0
  1075 ;;      Temps:          0       0       0       0       0       0       0
  1076 ;;      Totals:         0       0       0       0       0       0       0
  1077 ;;Total ram usage:        0 bytes
  1078 ;; Hardware stack levels used:    1
  1079 ;; This function calls:
  1080 ;;		Nothing
  1081 ;; This function is called by:
  1082 ;;		_main
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text5
  1087  006E62                     __ptext5:
  1088                           	callstack 0
  1089  006E62                     _timerInit:
  1090                           	callstack 30
  1091  006E62                     
  1092                           ;timer.c: 49:  T0CON = 0b00001000;
  1093  006E62  0E08               	movlw	8
  1094  006E64  6ED5               	movwf	213,c	;volatile
  1095  006E66                     
  1096                           ;timer.c: 50:  ((T0CON) |= (1<<(7)));
  1097  006E66  8ED5               	bsf	213,7,c	;volatile
  1098  006E68  0012               	return		;funcret
  1099  006E6A                     __end_of_timerInit:
  1100                           	callstack 0
  1101                           
  1102 ;; *************** function _serialInit *****************
  1103 ;; Defined at:
  1104 ;;		line 48 in file "serial.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;		None
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;		None
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, status,2, status,0
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1118 ;;      Params:         0       0       0       0       0       0       0
  1119 ;;      Locals:         0       0       0       0       0       0       0
  1120 ;;      Temps:          0       0       0       0       0       0       0
  1121 ;;      Totals:         0       0       0       0       0       0       0
  1122 ;;Total ram usage:        0 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; This function calls:
  1125 ;;		Nothing
  1126 ;; This function is called by:
  1127 ;;		_main
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text6
  1132  006EE6                     __ptext6:
  1133                           	callstack 0
  1134  006EE6                     _serialInit:
  1135                           	callstack 30
  1136  006EE6                     
  1137                           ;serial.c: 49:     TXSTA = 0b00101100;
  1138  006EE6  0E2C               	movlw	44
  1139  006EE8  6EAC               	movwf	172,c	;volatile
  1140                           
  1141                           ;serial.c: 50:     RCSTA = 0b10010000;
  1142  006EEA  0E90               	movlw	144
  1143  006EEC  6EAB               	movwf	171,c	;volatile
  1144                           
  1145                           ;serial.c: 51:     BAUDCON = 0b00001000;
  1146  006EEE  0E08               	movlw	8
  1147  006EF0  6EB8               	movwf	184,c	;volatile
  1148                           
  1149                           ;serial.c: 52:     SPBRGH = 0;
  1150  006EF2  0E00               	movlw	0
  1151  006EF4  6EB0               	movwf	176,c	;volatile
  1152                           
  1153                           ;serial.c: 53:     SPBRG = 34;
  1154  006EF6  0E22               	movlw	34
  1155  006EF8  6EAF               	movwf	175,c	;volatile
  1156  006EFA                     
  1157                           ;serial.c: 54:     ((TRISC) |= (1<<(6)));
  1158  006EFA  8C94               	bsf	148,6,c	;volatile
  1159  006EFC                     
  1160                           ;serial.c: 55:     ((TRISC) |= (1<<(7)));
  1161  006EFC  8E94               	bsf	148,7,c	;volatile
  1162  006EFE  0012               	return		;funcret
  1163  006F00                     __end_of_serialInit:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function _lcdInit *****************
  1167 ;; Defined at:
  1168 ;;		line 140 in file "lcd.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1182 ;;      Params:         0       0       0       0       0       0       0
  1183 ;;      Locals:         0       0       0       0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0       0       0
  1185 ;;      Totals:         0       0       0       0       0       0       0
  1186 ;;Total ram usage:        0 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    3
  1189 ;; This function calls:
  1190 ;;		_Delay2ms
  1191 ;;		_lcdCommand
  1192 ;;		_pinMode
  1193 ;; This function is called by:
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text7
  1199  0070FC                     __ptext7:
  1200                           	callstack 0
  1201  0070FC                     _lcdInit:
  1202                           	callstack 27
  1203  0070FC                     
  1204                           ;lcd.c: 142:   pinMode(PIN_E2, 0);
  1205  0070FC  0E00               	movlw	0
  1206  0070FE  6E02               	movwf	(pinMode@pin+1)^0,c
  1207  007100  0E22               	movlw	34
  1208  007102  6E01               	movwf	pinMode@pin^0,c
  1209  007104  0E00               	movlw	0
  1210  007106  6E04               	movwf	(pinMode@type+1)^0,c
  1211  007108  0E00               	movlw	0
  1212  00710A  6E03               	movwf	pinMode@type^0,c
  1213  00710C  EC2D  F03C         	call	_pinMode	;wreg free
  1214                           
  1215                           ;lcd.c: 143:   pinMode(PIN_E1, 0);
  1216  007110  0E00               	movlw	0
  1217  007112  6E02               	movwf	(pinMode@pin+1)^0,c
  1218  007114  0E21               	movlw	33
  1219  007116  6E01               	movwf	pinMode@pin^0,c
  1220  007118  0E00               	movlw	0
  1221  00711A  6E04               	movwf	(pinMode@type+1)^0,c
  1222  00711C  0E00               	movlw	0
  1223  00711E  6E03               	movwf	pinMode@type^0,c
  1224  007120  EC2D  F03C         	call	_pinMode	;wreg free
  1225  007124                     
  1226                           ;lcd.c: 144:   TRISD = 0x00;
  1227  007124  0E00               	movlw	0
  1228  007126  6E95               	movwf	149,c	;volatile
  1229  007128                     
  1230                           ;lcd.c: 147:   Delay2ms();
  1231  007128  EC8E  F037         	call	_Delay2ms	;wreg free
  1232  00712C                     
  1233                           ;lcd.c: 148:   Delay2ms();
  1234  00712C  EC8E  F037         	call	_Delay2ms	;wreg free
  1235  007130                     
  1236                           ;lcd.c: 149:   Delay2ms();
  1237  007130  EC8E  F037         	call	_Delay2ms	;wreg free
  1238  007134                     
  1239                           ;lcd.c: 150:   Delay2ms();
  1240  007134  EC8E  F037         	call	_Delay2ms	;wreg free
  1241  007138                     
  1242                           ;lcd.c: 151:   Delay2ms();
  1243  007138  EC8E  F037         	call	_Delay2ms	;wreg free
  1244  00713C                     
  1245                           ;lcd.c: 153:   lcdCommand(0x38);
  1246  00713C  0E38               	movlw	56
  1247  00713E  ECBA  F038         	call	_lcdCommand
  1248  007142                     
  1249                           ;lcd.c: 154:   Delay2ms();
  1250  007142  EC8E  F037         	call	_Delay2ms	;wreg free
  1251  007146                     
  1252                           ;lcd.c: 155:   Delay2ms();
  1253  007146  EC8E  F037         	call	_Delay2ms	;wreg free
  1254  00714A                     
  1255                           ;lcd.c: 156:   lcdCommand(0x38);
  1256  00714A  0E38               	movlw	56
  1257  00714C  ECBA  F038         	call	_lcdCommand
  1258  007150                     
  1259                           ;lcd.c: 157:   Delay2ms();
  1260  007150  EC8E  F037         	call	_Delay2ms	;wreg free
  1261  007154                     
  1262                           ;lcd.c: 158:   lcdCommand(0x38);
  1263  007154  0E38               	movlw	56
  1264  007156  ECBA  F038         	call	_lcdCommand
  1265  00715A                     
  1266                           ;lcd.c: 160:   lcdCommand(0x38);
  1267  00715A  0E38               	movlw	56
  1268  00715C  ECBA  F038         	call	_lcdCommand
  1269  007160                     
  1270                           ;lcd.c: 161:   lcdCommand(0x06);
  1271  007160  0E06               	movlw	6
  1272  007162  ECBA  F038         	call	_lcdCommand
  1273  007166                     
  1274                           ;lcd.c: 164:   lcdCommand(0x0C);
  1275  007166  0E0C               	movlw	12
  1276  007168  ECBA  F038         	call	_lcdCommand
  1277  00716C                     
  1278                           ;lcd.c: 165:   lcdCommand(0x01);
  1279  00716C  0E01               	movlw	1
  1280  00716E  ECBA  F038         	call	_lcdCommand
  1281  007172  0012               	return		;funcret
  1282  007174                     __end_of_lcdInit:
  1283                           	callstack 0
  1284                           
  1285 ;; *************** function _pinMode *****************
  1286 ;; Defined at:
  1287 ;;		line 54 in file "io.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  pin             2    0[COMRAM] int 
  1290 ;;  type            2    2[COMRAM] int 
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg, status,2, status,0
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1302 ;;      Params:         4       0       0       0       0       0       0
  1303 ;;      Locals:         0       0       0       0       0       0       0
  1304 ;;      Temps:          2       0       0       0       0       0       0
  1305 ;;      Totals:         6       0       0       0       0       0       0
  1306 ;;Total ram usage:        6 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; This function calls:
  1309 ;;		Nothing
  1310 ;; This function is called by:
  1311 ;;		_lcdInit
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text8
  1316  00785A                     __ptext8:
  1317                           	callstack 0
  1318  00785A                     _pinMode:
  1319                           	callstack 29
  1320  00785A                     
  1321                           ;io.c: 56:     if(pin <8){
  1322  00785A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1323  00785C  EF3B  F03C         	goto	u1440
  1324  007860  5002               	movf	(pinMode@pin+1)^0,w,c
  1325  007862  E107               	bnz	u1441
  1326  007864  0E08               	movlw	8
  1327  007866  5C01               	subwf	pinMode@pin^0,w,c
  1328  007868  B0D8               	btfsc	status,0,c
  1329  00786A  EF39  F03C         	goto	u1441
  1330  00786E  EF3B  F03C         	goto	u1440
  1331  007872                     u1441:
  1332  007872  EF65  F03C         	goto	l1891
  1333  007876                     u1440:
  1334  007876                     
  1335                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  1336  007876  5003               	movf	pinMode@type^0,w,c
  1337  007878  1004               	iorwf	(pinMode@type+1)^0,w,c
  1338  00787A  B4D8               	btfsc	status,2,c
  1339  00787C  EF42  F03C         	goto	u1451
  1340  007880  EF44  F03C         	goto	u1450
  1341  007884                     u1451:
  1342  007884  EF54  F03C         	goto	l1889
  1343  007888                     u1450:
  1344  007888  C001  F005         	movff	pinMode@pin,??_pinMode
  1345  00788C  0E01               	movlw	1
  1346  00788E  6E06               	movwf	(??_pinMode+1)^0,c
  1347  007890  2A05               	incf	??_pinMode^0,f,c
  1348  007892  EF4D  F03C         	goto	u1464
  1349  007896                     u1465:
  1350  007896  90D8               	bcf	status,0,c
  1351  007898  3606               	rlcf	(??_pinMode+1)^0,f,c
  1352  00789A                     u1464:
  1353  00789A  2E05               	decfsz	??_pinMode^0,f,c
  1354  00789C  EF4B  F03C         	goto	u1465
  1355  0078A0  5006               	movf	(??_pinMode+1)^0,w,c
  1356  0078A2  1292               	iorwf	146,f,c	;volatile
  1357  0078A4  EF53  F03D         	goto	l97
  1358  0078A8                     l1889:
  1359  0078A8  C001  F005         	movff	pinMode@pin,??_pinMode
  1360  0078AC  0E01               	movlw	1
  1361  0078AE  6E06               	movwf	(??_pinMode+1)^0,c
  1362  0078B0  2A05               	incf	??_pinMode^0,f,c
  1363  0078B2  EF5D  F03C         	goto	u1474
  1364  0078B6                     u1475:
  1365  0078B6  90D8               	bcf	status,0,c
  1366  0078B8  3606               	rlcf	(??_pinMode+1)^0,f,c
  1367  0078BA                     u1474:
  1368  0078BA  2E05               	decfsz	??_pinMode^0,f,c
  1369  0078BC  EF5B  F03C         	goto	u1475
  1370  0078C0  5006               	movf	(??_pinMode+1)^0,w,c
  1371  0078C2  0AFF               	xorlw	255
  1372  0078C4  1692               	andwf	146,f,c	;volatile
  1373  0078C6  EF53  F03D         	goto	l97
  1374  0078CA                     l1891:
  1375  0078CA  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1376  0078CC  EF73  F03C         	goto	u1480
  1377  0078D0  5002               	movf	(pinMode@pin+1)^0,w,c
  1378  0078D2  E107               	bnz	u1481
  1379  0078D4  0E10               	movlw	16
  1380  0078D6  5C01               	subwf	pinMode@pin^0,w,c
  1381  0078D8  B0D8               	btfsc	status,0,c
  1382  0078DA  EF71  F03C         	goto	u1481
  1383  0078DE  EF73  F03C         	goto	u1480
  1384  0078E2                     u1481:
  1385  0078E2  EFA1  F03C         	goto	l1899
  1386  0078E6                     u1480:
  1387  0078E6                     
  1388                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  1389  0078E6  5003               	movf	pinMode@type^0,w,c
  1390  0078E8  1004               	iorwf	(pinMode@type+1)^0,w,c
  1391  0078EA  B4D8               	btfsc	status,2,c
  1392  0078EC  EF7A  F03C         	goto	u1491
  1393  0078F0  EF7C  F03C         	goto	u1490
  1394  0078F4                     u1491:
  1395  0078F4  EF8E  F03C         	goto	l1897
  1396  0078F8                     u1490:
  1397  0078F8  C001  F005         	movff	pinMode@pin,??_pinMode
  1398  0078FC  0EF8               	movlw	-8
  1399  0078FE  2605               	addwf	??_pinMode^0,f,c
  1400  007900  0E01               	movlw	1
  1401  007902  6E06               	movwf	(??_pinMode+1)^0,c
  1402  007904  2A05               	incf	??_pinMode^0,f,c
  1403  007906  EF87  F03C         	goto	u1504
  1404  00790A                     u1505:
  1405  00790A  90D8               	bcf	status,0,c
  1406  00790C  3606               	rlcf	(??_pinMode+1)^0,f,c
  1407  00790E                     u1504:
  1408  00790E  2E05               	decfsz	??_pinMode^0,f,c
  1409  007910  EF85  F03C         	goto	u1505
  1410  007914  5006               	movf	(??_pinMode+1)^0,w,c
  1411  007916  1293               	iorwf	147,f,c	;volatile
  1412  007918  EF53  F03D         	goto	l97
  1413  00791C                     l1897:
  1414  00791C  C001  F005         	movff	pinMode@pin,??_pinMode
  1415  007920  0EF8               	movlw	-8
  1416  007922  2605               	addwf	??_pinMode^0,f,c
  1417  007924  0E01               	movlw	1
  1418  007926  6E06               	movwf	(??_pinMode+1)^0,c
  1419  007928  2A05               	incf	??_pinMode^0,f,c
  1420  00792A  EF99  F03C         	goto	u1514
  1421  00792E                     u1515:
  1422  00792E  90D8               	bcf	status,0,c
  1423  007930  3606               	rlcf	(??_pinMode+1)^0,f,c
  1424  007932                     u1514:
  1425  007932  2E05               	decfsz	??_pinMode^0,f,c
  1426  007934  EF97  F03C         	goto	u1515
  1427  007938  5006               	movf	(??_pinMode+1)^0,w,c
  1428  00793A  0AFF               	xorlw	255
  1429  00793C  1693               	andwf	147,f,c	;volatile
  1430  00793E  EF53  F03D         	goto	l97
  1431  007942                     l1899:
  1432  007942  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1433  007944  EFAF  F03C         	goto	u1520
  1434  007948  5002               	movf	(pinMode@pin+1)^0,w,c
  1435  00794A  E107               	bnz	u1521
  1436  00794C  0E18               	movlw	24
  1437  00794E  5C01               	subwf	pinMode@pin^0,w,c
  1438  007950  B0D8               	btfsc	status,0,c
  1439  007952  EFAD  F03C         	goto	u1521
  1440  007956  EFAF  F03C         	goto	u1520
  1441  00795A                     u1521:
  1442  00795A  EFDD  F03C         	goto	l1907
  1443  00795E                     u1520:
  1444  00795E                     
  1445                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  1446  00795E  5003               	movf	pinMode@type^0,w,c
  1447  007960  1004               	iorwf	(pinMode@type+1)^0,w,c
  1448  007962  B4D8               	btfsc	status,2,c
  1449  007964  EFB6  F03C         	goto	u1531
  1450  007968  EFB8  F03C         	goto	u1530
  1451  00796C                     u1531:
  1452  00796C  EFCA  F03C         	goto	l1905
  1453  007970                     u1530:
  1454  007970  C001  F005         	movff	pinMode@pin,??_pinMode
  1455  007974  0EF0               	movlw	-16
  1456  007976  2605               	addwf	??_pinMode^0,f,c
  1457  007978  0E01               	movlw	1
  1458  00797A  6E06               	movwf	(??_pinMode+1)^0,c
  1459  00797C  2A05               	incf	??_pinMode^0,f,c
  1460  00797E  EFC3  F03C         	goto	u1544
  1461  007982                     u1545:
  1462  007982  90D8               	bcf	status,0,c
  1463  007984  3606               	rlcf	(??_pinMode+1)^0,f,c
  1464  007986                     u1544:
  1465  007986  2E05               	decfsz	??_pinMode^0,f,c
  1466  007988  EFC1  F03C         	goto	u1545
  1467  00798C  5006               	movf	(??_pinMode+1)^0,w,c
  1468  00798E  1294               	iorwf	148,f,c	;volatile
  1469  007990  EF53  F03D         	goto	l97
  1470  007994                     l1905:
  1471  007994  C001  F005         	movff	pinMode@pin,??_pinMode
  1472  007998  0EF0               	movlw	-16
  1473  00799A  2605               	addwf	??_pinMode^0,f,c
  1474  00799C  0E01               	movlw	1
  1475  00799E  6E06               	movwf	(??_pinMode+1)^0,c
  1476  0079A0  2A05               	incf	??_pinMode^0,f,c
  1477  0079A2  EFD5  F03C         	goto	u1554
  1478  0079A6                     u1555:
  1479  0079A6  90D8               	bcf	status,0,c
  1480  0079A8  3606               	rlcf	(??_pinMode+1)^0,f,c
  1481  0079AA                     u1554:
  1482  0079AA  2E05               	decfsz	??_pinMode^0,f,c
  1483  0079AC  EFD3  F03C         	goto	u1555
  1484  0079B0  5006               	movf	(??_pinMode+1)^0,w,c
  1485  0079B2  0AFF               	xorlw	255
  1486  0079B4  1694               	andwf	148,f,c	;volatile
  1487  0079B6  EF53  F03D         	goto	l97
  1488  0079BA                     l1907:
  1489  0079BA  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1490  0079BC  EFEB  F03C         	goto	u1560
  1491  0079C0  5002               	movf	(pinMode@pin+1)^0,w,c
  1492  0079C2  E107               	bnz	u1561
  1493  0079C4  0E20               	movlw	32
  1494  0079C6  5C01               	subwf	pinMode@pin^0,w,c
  1495  0079C8  B0D8               	btfsc	status,0,c
  1496  0079CA  EFE9  F03C         	goto	u1561
  1497  0079CE  EFEB  F03C         	goto	u1560
  1498  0079D2                     u1561:
  1499  0079D2  EF19  F03D         	goto	l1915
  1500  0079D6                     u1560:
  1501  0079D6                     
  1502                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  1503  0079D6  5003               	movf	pinMode@type^0,w,c
  1504  0079D8  1004               	iorwf	(pinMode@type+1)^0,w,c
  1505  0079DA  B4D8               	btfsc	status,2,c
  1506  0079DC  EFF2  F03C         	goto	u1571
  1507  0079E0  EFF4  F03C         	goto	u1570
  1508  0079E4                     u1571:
  1509  0079E4  EF06  F03D         	goto	l1913
  1510  0079E8                     u1570:
  1511  0079E8  C001  F005         	movff	pinMode@pin,??_pinMode
  1512  0079EC  0EE8               	movlw	-24
  1513  0079EE  2605               	addwf	??_pinMode^0,f,c
  1514  0079F0  0E01               	movlw	1
  1515  0079F2  6E06               	movwf	(??_pinMode+1)^0,c
  1516  0079F4  2A05               	incf	??_pinMode^0,f,c
  1517  0079F6  EFFF  F03C         	goto	u1584
  1518  0079FA                     u1585:
  1519  0079FA  90D8               	bcf	status,0,c
  1520  0079FC  3606               	rlcf	(??_pinMode+1)^0,f,c
  1521  0079FE                     u1584:
  1522  0079FE  2E05               	decfsz	??_pinMode^0,f,c
  1523  007A00  EFFD  F03C         	goto	u1585
  1524  007A04  5006               	movf	(??_pinMode+1)^0,w,c
  1525  007A06  1295               	iorwf	149,f,c	;volatile
  1526  007A08  EF53  F03D         	goto	l97
  1527  007A0C                     l1913:
  1528  007A0C  C001  F005         	movff	pinMode@pin,??_pinMode
  1529  007A10  0EE8               	movlw	-24
  1530  007A12  2605               	addwf	??_pinMode^0,f,c
  1531  007A14  0E01               	movlw	1
  1532  007A16  6E06               	movwf	(??_pinMode+1)^0,c
  1533  007A18  2A05               	incf	??_pinMode^0,f,c
  1534  007A1A  EF11  F03D         	goto	u1594
  1535  007A1E                     u1595:
  1536  007A1E  90D8               	bcf	status,0,c
  1537  007A20  3606               	rlcf	(??_pinMode+1)^0,f,c
  1538  007A22                     u1594:
  1539  007A22  2E05               	decfsz	??_pinMode^0,f,c
  1540  007A24  EF0F  F03D         	goto	u1595
  1541  007A28  5006               	movf	(??_pinMode+1)^0,w,c
  1542  007A2A  0AFF               	xorlw	255
  1543  007A2C  1695               	andwf	149,f,c	;volatile
  1544  007A2E  EF53  F03D         	goto	l97
  1545  007A32                     l1915:
  1546  007A32  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1547  007A34  EF27  F03D         	goto	u1600
  1548  007A38  5002               	movf	(pinMode@pin+1)^0,w,c
  1549  007A3A  E107               	bnz	u1601
  1550  007A3C  0E28               	movlw	40
  1551  007A3E  5C01               	subwf	pinMode@pin^0,w,c
  1552  007A40  B0D8               	btfsc	status,0,c
  1553  007A42  EF25  F03D         	goto	u1601
  1554  007A46  EF27  F03D         	goto	u1600
  1555  007A4A                     u1601:
  1556  007A4A  EF53  F03D         	goto	l97
  1557  007A4E                     u1600:
  1558  007A4E                     
  1559                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  1560  007A4E  5003               	movf	pinMode@type^0,w,c
  1561  007A50  1004               	iorwf	(pinMode@type+1)^0,w,c
  1562  007A52  B4D8               	btfsc	status,2,c
  1563  007A54  EF2E  F03D         	goto	u1611
  1564  007A58  EF30  F03D         	goto	u1610
  1565  007A5C                     u1611:
  1566  007A5C  EF42  F03D         	goto	l1921
  1567  007A60                     u1610:
  1568  007A60  C001  F005         	movff	pinMode@pin,??_pinMode
  1569  007A64  0EE0               	movlw	-32
  1570  007A66  2605               	addwf	??_pinMode^0,f,c
  1571  007A68  0E01               	movlw	1
  1572  007A6A  6E06               	movwf	(??_pinMode+1)^0,c
  1573  007A6C  2A05               	incf	??_pinMode^0,f,c
  1574  007A6E  EF3B  F03D         	goto	u1624
  1575  007A72                     u1625:
  1576  007A72  90D8               	bcf	status,0,c
  1577  007A74  3606               	rlcf	(??_pinMode+1)^0,f,c
  1578  007A76                     u1624:
  1579  007A76  2E05               	decfsz	??_pinMode^0,f,c
  1580  007A78  EF39  F03D         	goto	u1625
  1581  007A7C  5006               	movf	(??_pinMode+1)^0,w,c
  1582  007A7E  1296               	iorwf	150,f,c	;volatile
  1583  007A80  EF53  F03D         	goto	l97
  1584  007A84                     l1921:
  1585  007A84  C001  F005         	movff	pinMode@pin,??_pinMode
  1586  007A88  0EE0               	movlw	-32
  1587  007A8A  2605               	addwf	??_pinMode^0,f,c
  1588  007A8C  0E01               	movlw	1
  1589  007A8E  6E06               	movwf	(??_pinMode+1)^0,c
  1590  007A90  2A05               	incf	??_pinMode^0,f,c
  1591  007A92  EF4D  F03D         	goto	u1634
  1592  007A96                     u1635:
  1593  007A96  90D8               	bcf	status,0,c
  1594  007A98  3606               	rlcf	(??_pinMode+1)^0,f,c
  1595  007A9A                     u1634:
  1596  007A9A  2E05               	decfsz	??_pinMode^0,f,c
  1597  007A9C  EF4B  F03D         	goto	u1635
  1598  007AA0  5006               	movf	(??_pinMode+1)^0,w,c
  1599  007AA2  0AFF               	xorlw	255
  1600  007AA4  1696               	andwf	150,f,c	;volatile
  1601  007AA6                     l97:
  1602  007AA6  0012               	return		;funcret
  1603  007AA8                     __end_of_pinMode:
  1604                           	callstack 0
  1605                           
  1606 ;; *************** function _kpRead *****************
  1607 ;; Defined at:
  1608 ;;		line 30 in file "keypad.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  2    0[COMRAM] unsigned int 
  1615 ;; Registers used:
  1616 ;;		None
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1622 ;;      Params:         2       0       0       0       0       0       0
  1623 ;;      Locals:         0       0       0       0       0       0       0
  1624 ;;      Temps:          0       0       0       0       0       0       0
  1625 ;;      Totals:         2       0       0       0       0       0       0
  1626 ;;Total ram usage:        2 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_main
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           	psect	text9
  1636  006E74                     __ptext9:
  1637                           	callstack 0
  1638  006E74                     _kpRead:
  1639                           	callstack 30
  1640  006E74                     
  1641                           ;keypad.c: 31:   return valor;
  1642  006E74  C043  F001         	movff	_valor,?_kpRead
  1643  006E78  C044  F002         	movff	_valor+1,?_kpRead+1
  1644  006E7C  0012               	return		;funcret
  1645  006E7E                     __end_of_kpRead:
  1646                           	callstack 0
  1647                           
  1648 ;; *************** function _kpInit *****************
  1649 ;; Defined at:
  1650 ;;		line 92 in file "keypad.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1664 ;;      Params:         0       0       0       0       0       0       0
  1665 ;;      Locals:         0       0       0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0
  1667 ;;      Totals:         0       0       0       0       0       0       0
  1668 ;;Total ram usage:        0 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text10
  1678  006E6A                     __ptext10:
  1679                           	callstack 0
  1680  006E6A                     _kpInit:
  1681                           	callstack 30
  1682  006E6A                     
  1683                           ;keypad.c: 94:   TRISB &= 0x07;
  1684  006E6A  0E07               	movlw	7
  1685  006E6C  1693               	andwf	147,f,c	;volatile
  1686                           
  1687                           ;keypad.c: 96:   TRISD |= 0x0f;
  1688  006E6E  0E0F               	movlw	15
  1689  006E70  1295               	iorwf	149,f,c	;volatile
  1690  006E72  0012               	return		;funcret
  1691  006E74                     __end_of_kpInit:
  1692                           	callstack 0
  1693                           
  1694 ;; *************** function _kpDebounce *****************
  1695 ;; Defined at:
  1696 ;;		line 34 in file "keypad.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;		None
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  k               2    9[COMRAM] int 
  1701 ;;  i               1   12[COMRAM] unsigned char 
  1702 ;;  j               1   11[COMRAM] unsigned char 
  1703 ;;  old_trisB       1    8[COMRAM] unsigned char 
  1704 ;;  old_trisD       1    7[COMRAM] unsigned char 
  1705 ;;  old_portB       1    6[COMRAM] unsigned char 
  1706 ;;  old_portD       1    5[COMRAM] unsigned char 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0, prodl, prodh
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1716 ;;      Params:         0       0       0       0       0       0       0
  1717 ;;      Locals:         8       0       0       0       0       0       0
  1718 ;;      Temps:          5       0       0       0       0       0       0
  1719 ;;      Totals:        13       0       0       0       0       0       0
  1720 ;;Total ram usage:       13 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		_main
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text11
  1730  007472                     __ptext11:
  1731                           	callstack 0
  1732  007472                     _kpDebounce:
  1733                           	callstack 30
  1734  007472                     
  1735                           ;keypad.c: 35:   unsigned char i, j;;keypad.c: 38:   unsigned char old_portD = PORTD;
  1736  007472  CF83 F006          	movff	3971,kpDebounce@old_portD	;volatile
  1737                           
  1738                           ;keypad.c: 39:   unsigned char old_portB = PORTB;
  1739  007476  CF81 F007          	movff	3969,kpDebounce@old_portB	;volatile
  1740                           
  1741                           ;keypad.c: 41:   unsigned char old_trisD = TRISD;
  1742  00747A  CF95 F008          	movff	3989,kpDebounce@old_trisD	;volatile
  1743                           
  1744                           ;keypad.c: 42:   unsigned char old_trisB = TRISB;
  1745  00747E  CF93 F009          	movff	3987,kpDebounce@old_trisB	;volatile
  1746  007482                     
  1747                           ;keypad.c: 46:   TRISD |= 0x0f;
  1748  007482  0E0F               	movlw	15
  1749  007484  1295               	iorwf	149,f,c	;volatile
  1750  007486                     
  1751                           ;keypad.c: 48:   for (i = 0; i < 3; i++){
  1752  007486  0E00               	movlw	0
  1753  007488  6E0D               	movwf	kpDebounce@i^0,c
  1754  00748A                     l1333:
  1755                           
  1756                           ;keypad.c: 50:     TRISB &= 0xF8;
  1757  00748A  0EF8               	movlw	248
  1758  00748C  1693               	andwf	147,f,c	;volatile
  1759                           
  1760                           ;keypad.c: 52:     ((TRISB) |= (1<<(i)));
  1761  00748E  C00D  F001         	movff	kpDebounce@i,??_kpDebounce
  1762  007492  0E01               	movlw	1
  1763  007494  6E02               	movwf	(??_kpDebounce+1)^0,c
  1764  007496  2A01               	incf	??_kpDebounce^0,f,c
  1765  007498  EF50  F03A         	goto	u694
  1766  00749C                     u695:
  1767  00749C  90D8               	bcf	status,0,c
  1768  00749E  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  1769  0074A0                     u694:
  1770  0074A0  2E01               	decfsz	??_kpDebounce^0,f,c
  1771  0074A2  EF4E  F03A         	goto	u695
  1772  0074A6  5002               	movf	(??_kpDebounce+1)^0,w,c
  1773  0074A8  1293               	iorwf	147,f,c	;volatile
  1774                           
  1775                           ;keypad.c: 54:     PORTB |= 0x07;
  1776  0074AA  0E07               	movlw	7
  1777  0074AC  1281               	iorwf	129,f,c	;volatile
  1778                           
  1779                           ;keypad.c: 55:     ((PORTB) &= ~(1<<(i)));
  1780  0074AE  C00D  F001         	movff	kpDebounce@i,??_kpDebounce
  1781  0074B2  0E01               	movlw	1
  1782  0074B4  6E02               	movwf	(??_kpDebounce+1)^0,c
  1783  0074B6  2A01               	incf	??_kpDebounce^0,f,c
  1784  0074B8  EF60  F03A         	goto	u704
  1785  0074BC                     u705:
  1786  0074BC  90D8               	bcf	status,0,c
  1787  0074BE  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  1788  0074C0                     u704:
  1789  0074C0  2E01               	decfsz	??_kpDebounce^0,f,c
  1790  0074C2  EF5E  F03A         	goto	u705
  1791  0074C6  5002               	movf	(??_kpDebounce+1)^0,w,c
  1792  0074C8  0AFF               	xorlw	255
  1793  0074CA  1681               	andwf	129,f,c	;volatile
  1794  0074CC                     
  1795                           ;keypad.c: 58:     for (int k = 0; k < 5; k++);
  1796  0074CC  0E00               	movlw	0
  1797  0074CE  6E0B               	movwf	(kpDebounce@k+1)^0,c
  1798  0074D0  0E00               	movlw	0
  1799  0074D2  6E0A               	movwf	kpDebounce@k^0,c
  1800  0074D4                     l1341:
  1801  0074D4  4A0A               	infsnz	kpDebounce@k^0,f,c
  1802  0074D6  2A0B               	incf	(kpDebounce@k+1)^0,f,c
  1803  0074D8  BE0B               	btfsc	(kpDebounce@k+1)^0,7,c
  1804  0074DA  EF78  F03A         	goto	u711
  1805  0074DE  500B               	movf	(kpDebounce@k+1)^0,w,c
  1806  0074E0  E109               	bnz	u710
  1807  0074E2  0E05               	movlw	5
  1808  0074E4  5C0A               	subwf	kpDebounce@k^0,w,c
  1809  0074E6  A0D8               	btfss	status,0,c
  1810  0074E8  EF78  F03A         	goto	u711
  1811  0074EC  EF7A  F03A         	goto	u710
  1812  0074F0                     u711:
  1813  0074F0  EF6A  F03A         	goto	l1341
  1814  0074F4                     u710:
  1815  0074F4                     
  1816                           ;keypad.c: 61:     for (j = 0; j < 4; j++){
  1817  0074F4  0E00               	movlw	0
  1818  0074F6  6E0C               	movwf	kpDebounce@j^0,c
  1819  0074F8                     l1351:
  1820                           
  1821                           ;keypad.c: 62:       if (!((PORTD) & (1<<(j)))){
  1822  0074F8  C00C  F001         	movff	kpDebounce@j,??_kpDebounce
  1823  0074FC  0E01               	movlw	1
  1824  0074FE  6E02               	movwf	(??_kpDebounce+1)^0,c
  1825  007500  2A01               	incf	??_kpDebounce^0,f,c
  1826  007502  EF85  F03A         	goto	u724
  1827  007506                     u725:
  1828  007506  90D8               	bcf	status,0,c
  1829  007508  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  1830  00750A                     u724:
  1831  00750A  2E01               	decfsz	??_kpDebounce^0,f,c
  1832  00750C  EF83  F03A         	goto	u725
  1833  007510  5002               	movf	(??_kpDebounce+1)^0,w,c
  1834  007512  1483               	andwf	131,w,c	;volatile
  1835  007514  0900               	iorlw	0
  1836  007516  A4D8               	btfss	status,2,c
  1837  007518  EF90  F03A         	goto	u731
  1838  00751C  EF92  F03A         	goto	u730
  1839  007520                     u731:
  1840  007520  EFAA  F03A         	goto	l1355
  1841  007524                     u730:
  1842  007524                     
  1843                           ;keypad.c: 63:         ((valorNovo) |= (1<<((i * 4) + j)));
  1844  007524  500D               	movf	kpDebounce@i^0,w,c
  1845  007526  0D04               	mullw	4
  1846  007528  50F3               	movf	243,w,c
  1847  00752A  240C               	addwf	kpDebounce@j^0,w,c
  1848  00752C  6E01               	movwf	??_kpDebounce^0,c
  1849  00752E  0E01               	movlw	1
  1850  007530  6E02               	movwf	(??_kpDebounce+1)^0,c
  1851  007532  0E00               	movlw	0
  1852  007534  6E03               	movwf	(??_kpDebounce+2)^0,c
  1853  007536  2A01               	incf	??_kpDebounce^0,f,c
  1854  007538  EFA1  F03A         	goto	u744
  1855  00753C                     u745:
  1856  00753C  90D8               	bcf	status,0,c
  1857  00753E  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  1858  007540  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  1859  007542                     u744:
  1860  007542  2E01               	decfsz	??_kpDebounce^0,f,c
  1861  007544  EF9E  F03A         	goto	u745
  1862  007548  5002               	movf	(??_kpDebounce+1)^0,w,c
  1863  00754A  1247               	iorwf	_valorNovo^0,f,c
  1864  00754C  5003               	movf	(??_kpDebounce+2)^0,w,c
  1865  00754E  1248               	iorwf	(_valorNovo+1)^0,f,c
  1866                           
  1867                           ;keypad.c: 64:       }
  1868  007550  EFC4  F03A         	goto	l1357
  1869  007554                     l1355:
  1870                           
  1871                           ;keypad.c: 66:         ((valorNovo) &= ~(1<<((i * 4) + j)));
  1872  007554  500D               	movf	kpDebounce@i^0,w,c
  1873  007556  0D04               	mullw	4
  1874  007558  50F3               	movf	243,w,c
  1875  00755A  240C               	addwf	kpDebounce@j^0,w,c
  1876  00755C  6E01               	movwf	??_kpDebounce^0,c
  1877  00755E  0E01               	movlw	1
  1878  007560  6E02               	movwf	(??_kpDebounce+1)^0,c
  1879  007562  0E00               	movlw	0
  1880  007564  6E03               	movwf	(??_kpDebounce+2)^0,c
  1881  007566  2A01               	incf	??_kpDebounce^0,f,c
  1882  007568  EFB9  F03A         	goto	u754
  1883  00756C                     u755:
  1884  00756C  90D8               	bcf	status,0,c
  1885  00756E  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  1886  007570  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  1887  007572                     u754:
  1888  007572  2E01               	decfsz	??_kpDebounce^0,f,c
  1889  007574  EFB6  F03A         	goto	u755
  1890  007578  1C02               	comf	(??_kpDebounce+1)^0,w,c
  1891  00757A  6E04               	movwf	(??_kpDebounce+3)^0,c
  1892  00757C  1C03               	comf	(??_kpDebounce+2)^0,w,c
  1893  00757E  6E05               	movwf	(??_kpDebounce+4)^0,c
  1894  007580  5004               	movf	(??_kpDebounce+3)^0,w,c
  1895  007582  1647               	andwf	_valorNovo^0,f,c
  1896  007584  5005               	movf	(??_kpDebounce+4)^0,w,c
  1897  007586  1648               	andwf	(_valorNovo+1)^0,f,c
  1898  007588                     l1357:
  1899                           
  1900                           ;keypad.c: 68:     }
  1901  007588  2A0C               	incf	kpDebounce@j^0,f,c
  1902  00758A  0E03               	movlw	3
  1903  00758C  640C               	cpfsgt	kpDebounce@j^0,c
  1904  00758E  EFCB  F03A         	goto	u761
  1905  007592  EFCD  F03A         	goto	u760
  1906  007596                     u761:
  1907  007596  EF7C  F03A         	goto	l1351
  1908  00759A                     u760:
  1909  00759A                     
  1910                           ;keypad.c: 69:   }
  1911  00759A  2A0D               	incf	kpDebounce@i^0,f,c
  1912  00759C  0E02               	movlw	2
  1913  00759E  640D               	cpfsgt	kpDebounce@i^0,c
  1914  0075A0  EFD4  F03A         	goto	u771
  1915  0075A4  EFD6  F03A         	goto	u770
  1916  0075A8                     u771:
  1917  0075A8  EF45  F03A         	goto	l1333
  1918  0075AC                     u770:
  1919  0075AC                     
  1920                           ;keypad.c: 72:   PORTD = old_portD;
  1921  0075AC  C006  FF83         	movff	kpDebounce@old_portD,3971	;volatile
  1922                           
  1923                           ;keypad.c: 73:   PORTB = old_portB;
  1924  0075B0  C007  FF81         	movff	kpDebounce@old_portB,3969	;volatile
  1925                           
  1926                           ;keypad.c: 74:   TRISD = old_trisD;
  1927  0075B4  C008  FF95         	movff	kpDebounce@old_trisD,3989	;volatile
  1928                           
  1929                           ;keypad.c: 75:   TRISB = old_trisB;
  1930  0075B8  C009  FF93         	movff	kpDebounce@old_trisB,3987	;volatile
  1931  0075BC                     
  1932                           ;keypad.c: 77:   if (valorAntigo == valorNovo){
  1933  0075BC  5047               	movf	_valorNovo^0,w,c
  1934  0075BE  1845               	xorwf	_valorAntigo^0,w,c
  1935  0075C0  E107               	bnz	u781
  1936  0075C2  5048               	movf	(_valorNovo+1)^0,w,c
  1937  0075C4  1846               	xorwf	(_valorAntigo+1)^0,w,c
  1938  0075C6  A4D8               	btfss	status,2,c
  1939  0075C8  EFE8  F03A         	goto	u781
  1940  0075CC  EFEA  F03A         	goto	u780
  1941  0075D0                     u781:
  1942  0075D0  EFED  F03A         	goto	l1369
  1943  0075D4                     u780:
  1944  0075D4                     
  1945                           ;keypad.c: 78:     tempo--;
  1946  0075D4  0649               	decf	_tempo^0,f,c
  1947                           
  1948                           ;keypad.c: 79:   }
  1949  0075D6  EFF3  F03A         	goto	l128
  1950  0075DA                     l1369:
  1951                           
  1952                           ;keypad.c: 81:     tempo = 2;
  1953  0075DA  0E02               	movlw	2
  1954  0075DC  6E49               	movwf	_tempo^0,c
  1955  0075DE                     
  1956                           ;keypad.c: 82:     valorAntigo = valorNovo;
  1957  0075DE  C047  F045         	movff	_valorNovo,_valorAntigo
  1958  0075E2  C048  F046         	movff	_valorNovo+1,_valorAntigo+1
  1959  0075E6                     l128:
  1960                           
  1961                           ;keypad.c: 84:   if (tempo == 0){
  1962  0075E6  5049               	movf	_tempo^0,w,c
  1963  0075E8  A4D8               	btfss	status,2,c
  1964  0075EA  EFF9  F03A         	goto	u791
  1965  0075EE  EFFB  F03A         	goto	u790
  1966  0075F2                     u791:
  1967  0075F2  EF01  F03B         	goto	l1375
  1968  0075F6                     u790:
  1969  0075F6                     
  1970                           ;keypad.c: 85:     valor = valorAntigo;
  1971  0075F6  C045  F043         	movff	_valorAntigo,_valor
  1972  0075FA  C046  F044         	movff	_valorAntigo+1,_valor+1
  1973                           
  1974                           ;keypad.c: 86:   }
  1975  0075FE  EF05  F03B         	goto	l131
  1976  007602                     l1375:
  1977                           
  1978                           ;keypad.c: 88:     valor = 0x0000;
  1979  007602  0E00               	movlw	0
  1980  007604  6E44               	movwf	(_valor+1)^0,c
  1981  007606  0E00               	movlw	0
  1982  007608  6E43               	movwf	_valor^0,c
  1983  00760A                     l131:
  1984  00760A  0012               	return		;funcret
  1985  00760C                     __end_of_kpDebounce:
  1986                           	callstack 0
  1987                           
  1988 ;; *************** function _checarTimer *****************
  1989 ;; Defined at:
  1990 ;;		line 49 in file "main_projeto.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;		None
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;		None
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		wreg, status,2, status,0
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2004 ;;      Params:         0       0       0       0       0       0       0
  2005 ;;      Locals:         0       0       0       0       0       0       0
  2006 ;;      Temps:          0       0       0       0       0       0       0
  2007 ;;      Totals:         0       0       0       0       0       0       0
  2008 ;;Total ram usage:        0 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_main
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text12
  2018  006FFA                     __ptext12:
  2019                           	callstack 0
  2020  006FFA                     _checarTimer:
  2021                           	callstack 30
  2022  006FFA                     
  2023                           ;main_projeto.c: 50:   if (((flag) & (1<<(7)))){
  2024  006FFA  AE3C               	btfss	_flag^0,7,c
  2025  006FFC  EF02  F038         	goto	u811
  2026  007000  EF04  F038         	goto	u810
  2027  007004                     u811:
  2028  007004  EF25  F038         	goto	l292
  2029  007008                     u810:
  2030  007008                     
  2031                           ;main_projeto.c: 51:     countMetron++;
  2032  007008  4A41               	infsnz	_countMetron^0,f,c
  2033  00700A  2A42               	incf	(_countMetron+1)^0,f,c
  2034  00700C                     
  2035                           ;main_projeto.c: 52:     if (countMetron >= countMetronMax){
  2036  00700C  503F               	movf	_countMetronMax^0,w,c
  2037  00700E  5C41               	subwf	_countMetron^0,w,c
  2038  007010  5040               	movf	(_countMetronMax+1)^0,w,c
  2039  007012  5842               	subwfb	(_countMetron+1)^0,w,c
  2040  007014  A0D8               	btfss	status,0,c
  2041  007016  EF0F  F038         	goto	u821
  2042  00701A  EF11  F038         	goto	u820
  2043  00701E                     u821:
  2044  00701E  EF19  F038         	goto	l1453
  2045  007022                     u820:
  2046  007022                     
  2047                           ;main_projeto.c: 53:       ((TRISB) &= ~(1<<(7)));
  2048  007022  9E93               	bcf	147,7,c	;volatile
  2049                           
  2050                           ;main_projeto.c: 54:       ((PORTB) |= (1<<(7)));
  2051  007024  8E81               	bsf	129,7,c	;volatile
  2052  007026                     
  2053                           ;main_projeto.c: 55:       countMetron = 0;
  2054  007026  0E00               	movlw	0
  2055  007028  6E42               	movwf	(_countMetron+1)^0,c
  2056  00702A  0E00               	movlw	0
  2057  00702C  6E41               	movwf	_countMetron^0,c
  2058                           
  2059                           ;main_projeto.c: 56:     }
  2060  00702E  EF25  F038         	goto	l292
  2061  007032                     l1453:
  2062  007032  0E14               	movlw	20
  2063  007034  1841               	xorwf	_countMetron^0,w,c
  2064  007036  1042               	iorwf	(_countMetron+1)^0,w,c
  2065  007038  A4D8               	btfss	status,2,c
  2066  00703A  EF21  F038         	goto	u831
  2067  00703E  EF23  F038         	goto	u830
  2068  007042                     u831:
  2069  007042  EF25  F038         	goto	l292
  2070  007046                     u830:
  2071  007046                     
  2072                           ;main_projeto.c: 58:       ((TRISB) &= ~(1<<(7)));
  2073  007046  9E93               	bcf	147,7,c	;volatile
  2074                           
  2075                           ;main_projeto.c: 59:       ((PORTB) &= ~(1<<(7)));
  2076  007048  9E81               	bcf	129,7,c	;volatile
  2077  00704A                     l292:
  2078  00704A  0012               	return		;funcret
  2079  00704C                     __end_of_checarTimer:
  2080                           	callstack 0
  2081                           
  2082 ;; *************** function _checarLCD *****************
  2083 ;; Defined at:
  2084 ;;		line 64 in file "main_projeto.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;		None
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;		None
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2098 ;;      Params:         0       0       0       0       0       0       0
  2099 ;;      Locals:         0       0       0       0       0       0       0
  2100 ;;      Temps:          0       0       0       0       0       0       0
  2101 ;;      Totals:         0       0       0       0       0       0       0
  2102 ;;Total ram usage:        0 bytes
  2103 ;; Hardware stack levels used:    1
  2104 ;; Hardware stack levels required when called:    4
  2105 ;; This function calls:
  2106 ;;		_print
  2107 ;; This function is called by:
  2108 ;;		_main
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text13
  2113  0070A0                     __ptext13:
  2114                           	callstack 0
  2115  0070A0                     _checarLCD:
  2116                           	callstack 26
  2117  0070A0                     
  2118                           ;main_projeto.c: 65:   if (!((flag) & (1<<(7))) && ((flag) & (1<<(6)))){
  2119  0070A0  BE3C               	btfsc	_flag^0,7,c
  2120  0070A2  EF55  F038         	goto	u1731
  2121  0070A6  EF57  F038         	goto	u1730
  2122  0070AA                     u1731:
  2123  0070AA  EF68  F038         	goto	l295
  2124  0070AE                     u1730:
  2125  0070AE  AC3C               	btfss	_flag^0,6,c
  2126  0070B0  EF5C  F038         	goto	u1741
  2127  0070B4  EF5E  F038         	goto	u1740
  2128  0070B8                     u1741:
  2129  0070B8  EF68  F038         	goto	l295
  2130  0070BC                     u1740:
  2131  0070BC                     
  2132                           ;main_projeto.c: 66:     ((TRISB) &= ~(1<<(7)));
  2133  0070BC  9E93               	bcf	147,7,c	;volatile
  2134                           
  2135                           ;main_projeto.c: 67:     ((PORTB) &= ~(1<<(7)));
  2136  0070BE  9E81               	bcf	129,7,c	;volatile
  2137  0070C0                     
  2138                           ;main_projeto.c: 68:     print(-1);
  2139  0070C0  0EFF               	movlw	255
  2140  0070C2  6E10               	movwf	(print@admt+1)^0,c
  2141  0070C4  680F               	setf	print@admt^0,c
  2142  0070C6  EC54  F03D         	call	_print	;wreg free
  2143  0070CA                     
  2144                           ;main_projeto.c: 69:     ((flag) &= ~(1<<(6)));
  2145  0070CA  9C3C               	bcf	_flag^0,6,c
  2146                           
  2147                           ;main_projeto.c: 70:   }
  2148  0070CC  EF7D  F038         	goto	l298
  2149  0070D0                     l295:
  2150  0070D0  AE3C               	btfss	_flag^0,7,c
  2151  0070D2  EF6D  F038         	goto	u1751
  2152  0070D6  EF6F  F038         	goto	u1750
  2153  0070DA                     u1751:
  2154  0070DA  EF7D  F038         	goto	l298
  2155  0070DE                     u1750:
  2156  0070DE  BC3C               	btfsc	_flag^0,6,c
  2157  0070E0  EF74  F038         	goto	u1761
  2158  0070E4  EF76  F038         	goto	u1760
  2159  0070E8                     u1761:
  2160  0070E8  EF7D  F038         	goto	l298
  2161  0070EC                     u1760:
  2162  0070EC                     
  2163                           ;main_projeto.c: 72:     print(bpm);
  2164  0070EC  C03D  F00F         	movff	_bpm,print@admt
  2165  0070F0  C03E  F010         	movff	_bpm+1,print@admt+1
  2166  0070F4  EC54  F03D         	call	_print	;wreg free
  2167  0070F8                     
  2168                           ;main_projeto.c: 73:     ((flag) |= (1<<(6)));
  2169  0070F8  8C3C               	bsf	_flag^0,6,c
  2170  0070FA                     l298:
  2171  0070FA  0012               	return		;funcret
  2172  0070FC                     __end_of_checarLCD:
  2173                           	callstack 0
  2174                           
  2175 ;; *************** function _print *****************
  2176 ;; Defined at:
  2177 ;;		line 86 in file "lcd.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  admt            2   14[COMRAM] int 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  off             5   18[COMRAM] unsigned char [5]
  2182 ;;  msg            11   23[COMRAM] unsigned char [11]
  2183 ;;  i               1   34[COMRAM] unsigned char 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2193 ;;      Params:         2       0       0       0       0       0       0
  2194 ;;      Locals:        17       0       0       0       0       0       0
  2195 ;;      Temps:          2       0       0       0       0       0       0
  2196 ;;      Totals:        21       0       0       0       0       0       0
  2197 ;;Total ram usage:       21 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:    3
  2200 ;; This function calls:
  2201 ;;		___awdiv
  2202 ;;		___awmod
  2203 ;;		_lcdCommand
  2204 ;;		_lcdData
  2205 ;; This function is called by:
  2206 ;;		_checarLCD
  2207 ;;		_main
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text14
  2212  007AA8                     __ptext14:
  2213                           	callstack 0
  2214  007AA8                     _print:
  2215                           	callstack 27
  2216  007AA8                     
  2217                           ;lcd.c: 87:   unsigned char i;;lcd.c: 88:   char msg[] = "Metronomo:";
  2218  007AA8  EE20  F02B         	lfsr	2,print@F2423
  2219  007AAC  EE10  F018         	lfsr	1,print@msg
  2220  007AB0  0E0A               	movlw	10
  2221  007AB2                     u1641:
  2222  007AB2  CFDB FFE3          	movff	plusw2,plusw1
  2223  007AB6  06E8               	decf	wreg,f,c
  2224  007AB8  E2FC               	bc	u1641
  2225  007ABA                     
  2226                           ;lcd.c: 90:   lcdCommand(0x01);
  2227  007ABA  0E01               	movlw	1
  2228  007ABC  ECBA  F038         	call	_lcdCommand
  2229  007AC0                     
  2230                           ;lcd.c: 93:   for (i = 0; i < 10; i++){
  2231  007AC0  0E00               	movlw	0
  2232  007AC2  6E23               	movwf	print@i^0,c
  2233  007AC4                     l1933:
  2234                           
  2235                           ;lcd.c: 94:     lcdData(msg[i]);
  2236  007AC4  0E18               	movlw	low print@msg
  2237  007AC6  2423               	addwf	print@i^0,w,c
  2238  007AC8  6ED9               	movwf	fsr2l,c
  2239  007ACA  6ADA               	clrf	fsr2h,c
  2240  007ACC  0E00               	movlw	high print@msg
  2241  007ACE  22DA               	addwfc	fsr2h,f,c
  2242  007AD0  50DF               	movf	indf2,w,c
  2243  007AD2  EC26  F038         	call	_lcdData
  2244                           
  2245                           ;lcd.c: 95:     switch(i){
  2246  007AD6  EF95  F03D         	goto	l1945
  2247  007ADA                     l1935:
  2248  007ADA  0E18               	movlw	low print@msg
  2249  007ADC  2423               	addwf	print@i^0,w,c
  2250  007ADE  6ED9               	movwf	fsr2l,c
  2251  007AE0  6ADA               	clrf	fsr2h,c
  2252  007AE2  0E00               	movlw	high print@msg
  2253  007AE4  22DA               	addwfc	fsr2h,f,c
  2254  007AE6  0E20               	movlw	32
  2255  007AE8  6EDF               	movwf	indf2,c
  2256  007AEA  EFB2  F03D         	goto	l1947
  2257  007AEE                     l1937:
  2258  007AEE  0E18               	movlw	low print@msg
  2259  007AF0  2423               	addwf	print@i^0,w,c
  2260  007AF2  6ED9               	movwf	fsr2l,c
  2261  007AF4  6ADA               	clrf	fsr2h,c
  2262  007AF6  0E00               	movlw	high print@msg
  2263  007AF8  22DA               	addwfc	fsr2h,f,c
  2264  007AFA  0E62               	movlw	98
  2265  007AFC  6EDF               	movwf	indf2,c
  2266  007AFE  EFB2  F03D         	goto	l1947
  2267  007B02                     l1939:
  2268  007B02  0E18               	movlw	low print@msg
  2269  007B04  2423               	addwf	print@i^0,w,c
  2270  007B06  6ED9               	movwf	fsr2l,c
  2271  007B08  6ADA               	clrf	fsr2h,c
  2272  007B0A  0E00               	movlw	high print@msg
  2273  007B0C  22DA               	addwfc	fsr2h,f,c
  2274  007B0E  0E70               	movlw	112
  2275  007B10  6EDF               	movwf	indf2,c
  2276  007B12  EFB2  F03D         	goto	l1947
  2277  007B16                     l1941:
  2278  007B16  0E18               	movlw	low print@msg
  2279  007B18  2423               	addwf	print@i^0,w,c
  2280  007B1A  6ED9               	movwf	fsr2l,c
  2281  007B1C  6ADA               	clrf	fsr2h,c
  2282  007B1E  0E00               	movlw	high print@msg
  2283  007B20  22DA               	addwfc	fsr2h,f,c
  2284  007B22  0E6D               	movlw	109
  2285  007B24  6EDF               	movwf	indf2,c
  2286  007B26  EFB2  F03D         	goto	l1947
  2287  007B2A                     l1945:
  2288  007B2A  5023               	movf	print@i^0,w,c
  2289  007B2C  6E11               	movwf	??_print^0,c
  2290  007B2E  6A12               	clrf	(??_print+1)^0,c
  2291                           
  2292                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2293                           ; Switch size 1, requested type "simple"
  2294                           ; Number of cases is 1, Range of values is 0 to 0
  2295                           ; switch strategies available:
  2296                           ; Name         Instructions Cycles
  2297                           ; simple_byte            4     3 (average)
  2298                           ;	Chosen strategy is simple_byte
  2299  007B30  5012               	movf	(??_print+1)^0,w,c
  2300  007B32  0A00               	xorlw	0	; case 0
  2301  007B34  B4D8               	btfsc	status,2,c
  2302  007B36  EF9F  F03D         	goto	l2267
  2303  007B3A  EFB2  F03D         	goto	l1947
  2304  007B3E                     l2267:
  2305                           
  2306                           ; Switch size 1, requested type "simple"
  2307                           ; Number of cases is 4, Range of values is 0 to 3
  2308                           ; switch strategies available:
  2309                           ; Name         Instructions Cycles
  2310                           ; simple_byte           13     7 (average)
  2311                           ;	Chosen strategy is simple_byte
  2312  007B3E  5011               	movf	??_print^0,w,c
  2313  007B40  0A00               	xorlw	0	; case 0
  2314  007B42  B4D8               	btfsc	status,2,c
  2315  007B44  EF6D  F03D         	goto	l1935
  2316  007B48  0A01               	xorlw	1	; case 1
  2317  007B4A  B4D8               	btfsc	status,2,c
  2318  007B4C  EF77  F03D         	goto	l1937
  2319  007B50  0A03               	xorlw	3	; case 2
  2320  007B52  B4D8               	btfsc	status,2,c
  2321  007B54  EF81  F03D         	goto	l1939
  2322  007B58  0A01               	xorlw	1	; case 3
  2323  007B5A  B4D8               	btfsc	status,2,c
  2324  007B5C  EF8B  F03D         	goto	l1941
  2325  007B60  EFB2  F03D         	goto	l1947
  2326  007B64                     l1947:
  2327                           
  2328                           ;lcd.c: 101:   }
  2329  007B64  2A23               	incf	print@i^0,f,c
  2330  007B66  0E09               	movlw	9
  2331  007B68  6423               	cpfsgt	print@i^0,c
  2332  007B6A  EFB9  F03D         	goto	u1651
  2333  007B6E  EFBB  F03D         	goto	u1650
  2334  007B72                     u1651:
  2335  007B72  EF62  F03D         	goto	l1933
  2336  007B76                     u1650:
  2337  007B76                     
  2338                           ;lcd.c: 103:   if (admt == -1){
  2339  007B76  280F               	incf	print@admt^0,w,c
  2340  007B78  E106               	bnz	u1661
  2341  007B7A  2810               	incf	(print@admt+1)^0,w,c
  2342  007B7C  A4D8               	btfss	status,2,c
  2343  007B7E  EFC3  F03D         	goto	u1661
  2344  007B82  EFC5  F03D         	goto	u1660
  2345  007B86                     u1661:
  2346  007B86  EFE7  F03D         	goto	l1969
  2347  007B8A                     u1660:
  2348  007B8A                     
  2349                           ;lcd.c: 104:     char off[] = " OFF";
  2350  007B8A  EE20  F036         	lfsr	2,print@F2425
  2351  007B8E  EE10  F013         	lfsr	1,print@off
  2352  007B92  0E04               	movlw	4
  2353  007B94                     u1671:
  2354  007B94  CFDB FFE3          	movff	plusw2,plusw1
  2355  007B98  06E8               	decf	wreg,f,c
  2356  007B9A  E2FC               	bc	u1671
  2357  007B9C                     
  2358                           ;lcd.c: 105:     lcdCommand(0xC0);
  2359  007B9C  0EC0               	movlw	192
  2360  007B9E  ECBA  F038         	call	_lcdCommand
  2361  007BA2                     
  2362                           ;lcd.c: 106:     for (i=0; i<4; i++){
  2363  007BA2  0E00               	movlw	0
  2364  007BA4  6E23               	movwf	print@i^0,c
  2365  007BA6                     l1963:
  2366                           
  2367                           ;lcd.c: 107:       lcdData(off[i]);
  2368  007BA6  0E13               	movlw	low print@off
  2369  007BA8  2423               	addwf	print@i^0,w,c
  2370  007BAA  6ED9               	movwf	fsr2l,c
  2371  007BAC  6ADA               	clrf	fsr2h,c
  2372  007BAE  0E00               	movlw	high print@off
  2373  007BB0  22DA               	addwfc	fsr2h,f,c
  2374  007BB2  50DF               	movf	indf2,w,c
  2375  007BB4  EC26  F038         	call	_lcdData
  2376  007BB8                     
  2377                           ;lcd.c: 108:     }
  2378  007BB8  2A23               	incf	print@i^0,f,c
  2379  007BBA  0E03               	movlw	3
  2380  007BBC  6423               	cpfsgt	print@i^0,c
  2381  007BBE  EFE3  F03D         	goto	u1681
  2382  007BC2  EFE5  F03D         	goto	u1680
  2383  007BC6                     u1681:
  2384  007BC6  EFD3  F03D         	goto	l1963
  2385  007BCA                     u1680:
  2386  007BCA  EFA9  F03E         	goto	l180
  2387  007BCE                     l1969:
  2388                           
  2389                           ;lcd.c: 112:   lcdCommand(0xC0);
  2390  007BCE  0EC0               	movlw	192
  2391  007BD0  ECBA  F038         	call	_lcdCommand
  2392  007BD4                     
  2393                           ;lcd.c: 115:   if (admt < 10){
  2394  007BD4  BE10               	btfsc	(print@admt+1)^0,7,c
  2395  007BD6  EFF8  F03D         	goto	u1690
  2396  007BDA  5010               	movf	(print@admt+1)^0,w,c
  2397  007BDC  E107               	bnz	u1691
  2398  007BDE  0E0A               	movlw	10
  2399  007BE0  5C0F               	subwf	print@admt^0,w,c
  2400  007BE2  B0D8               	btfsc	status,0,c
  2401  007BE4  EFF6  F03D         	goto	u1691
  2402  007BE8  EFF8  F03D         	goto	u1690
  2403  007BEC                     u1691:
  2404  007BEC  EF08  F03E         	goto	l1975
  2405  007BF0                     u1690:
  2406  007BF0                     
  2407                           ;lcd.c: 116:     lcdData(48 + admt % 10);
  2408  007BF0  C00F  F009         	movff	print@admt,___awmod@dividend
  2409  007BF4  C010  F00A         	movff	print@admt+1,___awmod@dividend+1
  2410  007BF8  0E00               	movlw	0
  2411  007BFA  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2412  007BFC  0E0A               	movlw	10
  2413  007BFE  6E0B               	movwf	___awmod@divisor^0,c
  2414  007C00  ECF9  F038         	call	___awmod	;wreg free
  2415  007C04  5009               	movf	?___awmod^0,w,c
  2416  007C06  0F30               	addlw	48
  2417  007C08  EC26  F038         	call	_lcdData
  2418                           
  2419                           ;lcd.c: 117:   }
  2420  007C0C  EF95  F03E         	goto	l1985
  2421  007C10                     l1975:
  2422  007C10  BE10               	btfsc	(print@admt+1)^0,7,c
  2423  007C12  EF16  F03E         	goto	u1700
  2424  007C16  5010               	movf	(print@admt+1)^0,w,c
  2425  007C18  E107               	bnz	u1701
  2426  007C1A  0E64               	movlw	100
  2427  007C1C  5C0F               	subwf	print@admt^0,w,c
  2428  007C1E  B0D8               	btfsc	status,0,c
  2429  007C20  EF14  F03E         	goto	u1701
  2430  007C24  EF16  F03E         	goto	u1700
  2431  007C28                     u1701:
  2432  007C28  EF3E  F03E         	goto	l1979
  2433  007C2C                     u1700:
  2434  007C2C                     
  2435                           ;lcd.c: 119:     lcdData(48 + (admt / 10) % 10);
  2436  007C2C  0E00               	movlw	0
  2437  007C2E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2438  007C30  0E0A               	movlw	10
  2439  007C32  6E03               	movwf	___awdiv@divisor^0,c
  2440  007C34  C00F  F001         	movff	print@admt,___awdiv@dividend
  2441  007C38  C010  F002         	movff	print@admt+1,___awdiv@dividend+1
  2442  007C3C  EC51  F039         	call	___awdiv	;wreg free
  2443  007C40  C001  F009         	movff	?___awdiv,___awmod@dividend
  2444  007C44  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2445  007C48  0E00               	movlw	0
  2446  007C4A  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2447  007C4C  0E0A               	movlw	10
  2448  007C4E  6E0B               	movwf	___awmod@divisor^0,c
  2449  007C50  ECF9  F038         	call	___awmod	;wreg free
  2450  007C54  5009               	movf	?___awmod^0,w,c
  2451  007C56  0F30               	addlw	48
  2452  007C58  EC26  F038         	call	_lcdData
  2453                           
  2454                           ;lcd.c: 120:     lcdData(48 + admt % 10);
  2455  007C5C  C00F  F009         	movff	print@admt,___awmod@dividend
  2456  007C60  C010  F00A         	movff	print@admt+1,___awmod@dividend+1
  2457  007C64  0E00               	movlw	0
  2458  007C66  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2459  007C68  0E0A               	movlw	10
  2460  007C6A  6E0B               	movwf	___awmod@divisor^0,c
  2461  007C6C  ECF9  F038         	call	___awmod	;wreg free
  2462  007C70  5009               	movf	?___awmod^0,w,c
  2463  007C72  0F30               	addlw	48
  2464  007C74  EC26  F038         	call	_lcdData
  2465                           
  2466                           ;lcd.c: 121:   }
  2467  007C78  EF95  F03E         	goto	l1985
  2468  007C7C                     l1979:
  2469  007C7C  BE10               	btfsc	(print@admt+1)^0,7,c
  2470  007C7E  EF4C  F03E         	goto	u1710
  2471  007C82  0E2D               	movlw	45
  2472  007C84  5C0F               	subwf	print@admt^0,w,c
  2473  007C86  0E01               	movlw	1
  2474  007C88  5810               	subwfb	(print@admt+1)^0,w,c
  2475  007C8A  B0D8               	btfsc	status,0,c
  2476  007C8C  EF4A  F03E         	goto	u1711
  2477  007C90  EF4C  F03E         	goto	u1710
  2478  007C94                     u1711:
  2479  007C94  EF8C  F03E         	goto	l1983
  2480  007C98                     u1710:
  2481  007C98                     
  2482                           ;lcd.c: 123:     lcdData(48 + (admt / 100) % 10);
  2483  007C98  0E00               	movlw	0
  2484  007C9A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2485  007C9C  0E64               	movlw	100
  2486  007C9E  6E03               	movwf	___awdiv@divisor^0,c
  2487  007CA0  C00F  F001         	movff	print@admt,___awdiv@dividend
  2488  007CA4  C010  F002         	movff	print@admt+1,___awdiv@dividend+1
  2489  007CA8  EC51  F039         	call	___awdiv	;wreg free
  2490  007CAC  C001  F009         	movff	?___awdiv,___awmod@dividend
  2491  007CB0  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2492  007CB4  0E00               	movlw	0
  2493  007CB6  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2494  007CB8  0E0A               	movlw	10
  2495  007CBA  6E0B               	movwf	___awmod@divisor^0,c
  2496  007CBC  ECF9  F038         	call	___awmod	;wreg free
  2497  007CC0  5009               	movf	?___awmod^0,w,c
  2498  007CC2  0F30               	addlw	48
  2499  007CC4  EC26  F038         	call	_lcdData
  2500                           
  2501                           ;lcd.c: 124:     lcdData(48 + (admt / 10) % 10);
  2502  007CC8  0E00               	movlw	0
  2503  007CCA  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2504  007CCC  0E0A               	movlw	10
  2505  007CCE  6E03               	movwf	___awdiv@divisor^0,c
  2506  007CD0  C00F  F001         	movff	print@admt,___awdiv@dividend
  2507  007CD4  C010  F002         	movff	print@admt+1,___awdiv@dividend+1
  2508  007CD8  EC51  F039         	call	___awdiv	;wreg free
  2509  007CDC  C001  F009         	movff	?___awdiv,___awmod@dividend
  2510  007CE0  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2511  007CE4  0E00               	movlw	0
  2512  007CE6  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2513  007CE8  0E0A               	movlw	10
  2514  007CEA  6E0B               	movwf	___awmod@divisor^0,c
  2515  007CEC  ECF9  F038         	call	___awmod	;wreg free
  2516  007CF0  5009               	movf	?___awmod^0,w,c
  2517  007CF2  0F30               	addlw	48
  2518  007CF4  EC26  F038         	call	_lcdData
  2519                           
  2520                           ;lcd.c: 125:     lcdData(48 + admt % 10);
  2521  007CF8  C00F  F009         	movff	print@admt,___awmod@dividend
  2522  007CFC  C010  F00A         	movff	print@admt+1,___awmod@dividend+1
  2523  007D00  0E00               	movlw	0
  2524  007D02  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2525  007D04  0E0A               	movlw	10
  2526  007D06  6E0B               	movwf	___awmod@divisor^0,c
  2527  007D08  ECF9  F038         	call	___awmod	;wreg free
  2528  007D0C  5009               	movf	?___awmod^0,w,c
  2529  007D0E  0F30               	addlw	48
  2530  007D10  EC26  F038         	call	_lcdData
  2531                           
  2532                           ;lcd.c: 126:   }
  2533  007D14  EF95  F03E         	goto	l1985
  2534  007D18                     l1983:
  2535                           
  2536                           ;lcd.c: 128:     lcdData(51);
  2537  007D18  0E33               	movlw	51
  2538  007D1A  EC26  F038         	call	_lcdData
  2539                           
  2540                           ;lcd.c: 129:     lcdData(48);
  2541  007D1E  0E30               	movlw	48
  2542  007D20  EC26  F038         	call	_lcdData
  2543                           
  2544                           ;lcd.c: 130:     lcdData(48);
  2545  007D24  0E30               	movlw	48
  2546  007D26  EC26  F038         	call	_lcdData
  2547  007D2A                     l1985:
  2548                           
  2549                           ;lcd.c: 133:   for (i = 0; i < 4; i++){
  2550  007D2A  0E00               	movlw	0
  2551  007D2C  6E23               	movwf	print@i^0,c
  2552  007D2E                     l1991:
  2553                           
  2554                           ;lcd.c: 134:     lcdData(msg[i]);
  2555  007D2E  0E18               	movlw	low print@msg
  2556  007D30  2423               	addwf	print@i^0,w,c
  2557  007D32  6ED9               	movwf	fsr2l,c
  2558  007D34  6ADA               	clrf	fsr2h,c
  2559  007D36  0E00               	movlw	high print@msg
  2560  007D38  22DA               	addwfc	fsr2h,f,c
  2561  007D3A  50DF               	movf	indf2,w,c
  2562  007D3C  EC26  F038         	call	_lcdData
  2563  007D40                     
  2564                           ;lcd.c: 135:   }
  2565  007D40  2A23               	incf	print@i^0,f,c
  2566  007D42  0E03               	movlw	3
  2567  007D44  6423               	cpfsgt	print@i^0,c
  2568  007D46  EFA7  F03E         	goto	u1721
  2569  007D4A  EFA9  F03E         	goto	u1720
  2570  007D4E                     u1721:
  2571  007D4E  EF97  F03E         	goto	l1991
  2572  007D52                     u1720:
  2573  007D52                     l180:
  2574  007D52  0012               	return		;funcret
  2575  007D54                     __end_of_print:
  2576                           	callstack 0
  2577                           
  2578 ;; *************** function _lcdData *****************
  2579 ;; Defined at:
  2580 ;;		line 68 in file "lcd.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;  valor           1    wreg     unsigned char 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;  valor           1    6[COMRAM] unsigned char 
  2585 ;;  old_D           1    7[COMRAM] unsigned char 
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  1    wreg      void 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2595 ;;      Params:         0       0       0       0       0       0       0
  2596 ;;      Locals:         2       0       0       0       0       0       0
  2597 ;;      Temps:          0       0       0       0       0       0       0
  2598 ;;      Totals:         2       0       0       0       0       0       0
  2599 ;;Total ram usage:        2 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:    1
  2602 ;; This function calls:
  2603 ;;		_Delay40us
  2604 ;;		_digitalWrite
  2605 ;; This function is called by:
  2606 ;;		_print
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text15
  2611  00704C                     __ptext15:
  2612                           	callstack 0
  2613  00704C                     _lcdData:
  2614                           	callstack 28
  2615                           
  2616                           ;incstack = 0
  2617                           ;lcdData@valor stored from wreg
  2618  00704C  6E07               	movwf	lcdData@valor^0,c
  2619  00704E                     
  2620                           ;lcd.c: 70:   unsigned char old_D;;lcd.c: 71:   old_D = PORTD;
  2621  00704E  CF83 F008          	movff	3971,lcdData@old_D	;volatile
  2622  007052                     
  2623                           ;lcd.c: 73:   TRISD = 0x00;
  2624  007052  0E00               	movlw	0
  2625  007054  6E95               	movwf	149,c	;volatile
  2626  007056                     
  2627                           ;lcd.c: 74:   digitalWrite(PIN_E2, 1);
  2628  007056  0E00               	movlw	0
  2629  007058  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2630  00705A  0E22               	movlw	34
  2631  00705C  6E01               	movwf	digitalWrite@pin^0,c
  2632  00705E  0E00               	movlw	0
  2633  007060  6E04               	movwf	(digitalWrite@value+1)^0,c
  2634  007062  0E01               	movlw	1
  2635  007064  6E03               	movwf	digitalWrite@value^0,c
  2636  007066  EC06  F03B         	call	_digitalWrite	;wreg free
  2637  00706A                     
  2638                           ;lcd.c: 76:   PORTD = valor;
  2639  00706A  C007  FF83         	movff	lcdData@valor,3971	;volatile
  2640  00706E                     
  2641                           ;lcd.c: 78:   digitalWrite(PIN_E1, 1);
  2642  00706E  0E00               	movlw	0
  2643  007070  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2644  007072  0E21               	movlw	33
  2645  007074  6E01               	movwf	digitalWrite@pin^0,c
  2646  007076  0E00               	movlw	0
  2647  007078  6E04               	movwf	(digitalWrite@value+1)^0,c
  2648  00707A  0E01               	movlw	1
  2649  00707C  6E03               	movwf	digitalWrite@value^0,c
  2650  00707E  EC06  F03B         	call	_digitalWrite	;wreg free
  2651  007082                     
  2652                           ;lcd.c: 79:   digitalWrite(PIN_E1, 0);
  2653  007082  0E00               	movlw	0
  2654  007084  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2655  007086  0E21               	movlw	33
  2656  007088  6E01               	movwf	digitalWrite@pin^0,c
  2657  00708A  0E00               	movlw	0
  2658  00708C  6E04               	movwf	(digitalWrite@value+1)^0,c
  2659  00708E  0E00               	movlw	0
  2660  007090  6E03               	movwf	digitalWrite@value^0,c
  2661  007092  EC06  F03B         	call	_digitalWrite	;wreg free
  2662  007096                     
  2663                           ;lcd.c: 81:   PORTD = old_D;
  2664  007096  C008  FF83         	movff	lcdData@old_D,3971	;volatile
  2665  00709A                     
  2666                           ;lcd.c: 83:   Delay40us();
  2667  00709A  EC67  F037         	call	_Delay40us	;wreg free
  2668  00709E  0012               	return		;funcret
  2669  0070A0                     __end_of_lcdData:
  2670                           	callstack 0
  2671                           
  2672 ;; *************** function _lcdCommand *****************
  2673 ;; Defined at:
  2674 ;;		line 42 in file "lcd.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  cmd             1    wreg     unsigned char 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  cmd             1    7[COMRAM] unsigned char 
  2679 ;;  old_D           1    6[COMRAM] unsigned char 
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg, status,2, status,0, cstack
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2689 ;;      Params:         0       0       0       0       0       0       0
  2690 ;;      Locals:         2       0       0       0       0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0
  2692 ;;      Totals:         2       0       0       0       0       0       0
  2693 ;;Total ram usage:        2 bytes
  2694 ;; Hardware stack levels used:    1
  2695 ;; Hardware stack levels required when called:    2
  2696 ;; This function calls:
  2697 ;;		_Delay2ms
  2698 ;;		_Delay40us
  2699 ;;		_digitalWrite
  2700 ;; This function is called by:
  2701 ;;		_print
  2702 ;;		_lcdInit
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text16
  2707  007174                     __ptext16:
  2708                           	callstack 0
  2709  007174                     _lcdCommand:
  2710                           	callstack 27
  2711                           
  2712                           ;incstack = 0
  2713                           ;lcdCommand@cmd stored from wreg
  2714  007174  6E08               	movwf	lcdCommand@cmd^0,c
  2715  007176                     
  2716                           ;lcd.c: 43:   unsigned char old_D;;lcd.c: 44:   old_D = PORTD;
  2717  007176  CF83 F007          	movff	3971,lcdCommand@old_D	;volatile
  2718  00717A                     
  2719                           ;lcd.c: 47:   TRISD = 0x00;
  2720  00717A  0E00               	movlw	0
  2721  00717C  6E95               	movwf	149,c	;volatile
  2722  00717E                     
  2723                           ;lcd.c: 49:   digitalWrite(PIN_E2, 0);
  2724  00717E  0E00               	movlw	0
  2725  007180  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2726  007182  0E22               	movlw	34
  2727  007184  6E01               	movwf	digitalWrite@pin^0,c
  2728  007186  0E00               	movlw	0
  2729  007188  6E04               	movwf	(digitalWrite@value+1)^0,c
  2730  00718A  0E00               	movlw	0
  2731  00718C  6E03               	movwf	digitalWrite@value^0,c
  2732  00718E  EC06  F03B         	call	_digitalWrite	;wreg free
  2733  007192                     
  2734                           ;lcd.c: 50:   PORTD = cmd;
  2735  007192  C008  FF83         	movff	lcdCommand@cmd,3971	;volatile
  2736  007196                     
  2737                           ;lcd.c: 52:   digitalWrite(PIN_E1, 1);
  2738  007196  0E00               	movlw	0
  2739  007198  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2740  00719A  0E21               	movlw	33
  2741  00719C  6E01               	movwf	digitalWrite@pin^0,c
  2742  00719E  0E00               	movlw	0
  2743  0071A0  6E04               	movwf	(digitalWrite@value+1)^0,c
  2744  0071A2  0E01               	movlw	1
  2745  0071A4  6E03               	movwf	digitalWrite@value^0,c
  2746  0071A6  EC06  F03B         	call	_digitalWrite	;wreg free
  2747  0071AA                     
  2748                           ;lcd.c: 53:   digitalWrite(PIN_E1, 0);
  2749  0071AA  0E00               	movlw	0
  2750  0071AC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2751  0071AE  0E21               	movlw	33
  2752  0071B0  6E01               	movwf	digitalWrite@pin^0,c
  2753  0071B2  0E00               	movlw	0
  2754  0071B4  6E04               	movwf	(digitalWrite@value+1)^0,c
  2755  0071B6  0E00               	movlw	0
  2756  0071B8  6E03               	movwf	digitalWrite@value^0,c
  2757  0071BA  EC06  F03B         	call	_digitalWrite	;wreg free
  2758  0071BE                     
  2759                           ;lcd.c: 56:   PORTD = old_D;
  2760  0071BE  C007  FF83         	movff	lcdCommand@old_D,3971	;volatile
  2761  0071C2                     
  2762                           ;lcd.c: 58:   if ((cmd == 0x02) || (cmd == 0x01)){
  2763  0071C2  0E02               	movlw	2
  2764  0071C4  1808               	xorwf	lcdCommand@cmd^0,w,c
  2765  0071C6  B4D8               	btfsc	status,2,c
  2766  0071C8  EFE8  F038         	goto	u1281
  2767  0071CC  EFEA  F038         	goto	u1280
  2768  0071D0                     u1281:
  2769  0071D0  EFF2  F038         	goto	l1775
  2770  0071D4                     u1280:
  2771  0071D4  0408               	decf	lcdCommand@cmd^0,w,c
  2772  0071D6  A4D8               	btfss	status,2,c
  2773  0071D8  EFF0  F038         	goto	u1291
  2774  0071DC  EFF2  F038         	goto	u1290
  2775  0071E0                     u1291:
  2776  0071E0  EFF6  F038         	goto	l1777
  2777  0071E4                     u1290:
  2778  0071E4                     l1775:
  2779                           
  2780                           ;lcd.c: 59:     Delay2ms();
  2781  0071E4  EC8E  F037         	call	_Delay2ms	;wreg free
  2782                           
  2783                           ;lcd.c: 60:   }
  2784  0071E8  EFF8  F038         	goto	l159
  2785  0071EC                     l1777:
  2786                           
  2787                           ;lcd.c: 62:     Delay40us();
  2788  0071EC  EC67  F037         	call	_Delay40us	;wreg free
  2789  0071F0                     l159:
  2790  0071F0  0012               	return		;funcret
  2791  0071F2                     __end_of_lcdCommand:
  2792                           	callstack 0
  2793                           
  2794 ;; *************** function _digitalWrite *****************
  2795 ;; Defined at:
  2796 ;;		line 14 in file "io.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;  pin             2    0[COMRAM] int 
  2799 ;;  value           2    2[COMRAM] int 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		wreg, status,2, status,0
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2811 ;;      Params:         4       0       0       0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0       0       0
  2813 ;;      Temps:          2       0       0       0       0       0       0
  2814 ;;      Totals:         6       0       0       0       0       0       0
  2815 ;;Total ram usage:        6 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_lcdCommand
  2821 ;;		_lcdData
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text17
  2826  00760C                     __ptext17:
  2827                           	callstack 0
  2828  00760C                     _digitalWrite:
  2829                           	callstack 28
  2830  00760C                     
  2831                           ;io.c: 16:     if(pin <8){
  2832  00760C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2833  00760E  EF14  F03B         	goto	u1080
  2834  007612  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2835  007614  E107               	bnz	u1081
  2836  007616  0E08               	movlw	8
  2837  007618  5C01               	subwf	digitalWrite@pin^0,w,c
  2838  00761A  B0D8               	btfsc	status,0,c
  2839  00761C  EF12  F03B         	goto	u1081
  2840  007620  EF14  F03B         	goto	u1080
  2841  007624                     u1081:
  2842  007624  EF3E  F03B         	goto	l1725
  2843  007628                     u1080:
  2844  007628                     
  2845                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  2846  007628  5003               	movf	digitalWrite@value^0,w,c
  2847  00762A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2848  00762C  B4D8               	btfsc	status,2,c
  2849  00762E  EF1B  F03B         	goto	u1091
  2850  007632  EF1D  F03B         	goto	u1090
  2851  007636                     u1091:
  2852  007636  EF2D  F03B         	goto	l1723
  2853  00763A                     u1090:
  2854  00763A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2855  00763E  0E01               	movlw	1
  2856  007640  6E06               	movwf	(??_digitalWrite+1)^0,c
  2857  007642  2A05               	incf	??_digitalWrite^0,f,c
  2858  007644  EF26  F03B         	goto	u1104
  2859  007648                     u1105:
  2860  007648  90D8               	bcf	status,0,c
  2861  00764A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2862  00764C                     u1104:
  2863  00764C  2E05               	decfsz	??_digitalWrite^0,f,c
  2864  00764E  EF24  F03B         	goto	u1105
  2865  007652  5006               	movf	(??_digitalWrite+1)^0,w,c
  2866  007654  1280               	iorwf	128,f,c	;volatile
  2867  007656  EF2C  F03C         	goto	l63
  2868  00765A                     l1723:
  2869  00765A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2870  00765E  0E01               	movlw	1
  2871  007660  6E06               	movwf	(??_digitalWrite+1)^0,c
  2872  007662  2A05               	incf	??_digitalWrite^0,f,c
  2873  007664  EF36  F03B         	goto	u1114
  2874  007668                     u1115:
  2875  007668  90D8               	bcf	status,0,c
  2876  00766A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2877  00766C                     u1114:
  2878  00766C  2E05               	decfsz	??_digitalWrite^0,f,c
  2879  00766E  EF34  F03B         	goto	u1115
  2880  007672  5006               	movf	(??_digitalWrite+1)^0,w,c
  2881  007674  0AFF               	xorlw	255
  2882  007676  1680               	andwf	128,f,c	;volatile
  2883  007678  EF2C  F03C         	goto	l63
  2884  00767C                     l1725:
  2885  00767C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2886  00767E  EF4C  F03B         	goto	u1120
  2887  007682  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2888  007684  E107               	bnz	u1121
  2889  007686  0E10               	movlw	16
  2890  007688  5C01               	subwf	digitalWrite@pin^0,w,c
  2891  00768A  B0D8               	btfsc	status,0,c
  2892  00768C  EF4A  F03B         	goto	u1121
  2893  007690  EF4C  F03B         	goto	u1120
  2894  007694                     u1121:
  2895  007694  EF7A  F03B         	goto	l1733
  2896  007698                     u1120:
  2897  007698                     
  2898                           ;io.c: 20:         pin -=8;
  2899  007698  0EF8               	movlw	248
  2900  00769A  2601               	addwf	digitalWrite@pin^0,f,c
  2901  00769C  0EFF               	movlw	255
  2902  00769E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2903                           
  2904                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  2905  0076A0  5003               	movf	digitalWrite@value^0,w,c
  2906  0076A2  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2907  0076A4  B4D8               	btfsc	status,2,c
  2908  0076A6  EF57  F03B         	goto	u1131
  2909  0076AA  EF59  F03B         	goto	u1130
  2910  0076AE                     u1131:
  2911  0076AE  EF69  F03B         	goto	l1731
  2912  0076B2                     u1130:
  2913  0076B2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2914  0076B6  0E01               	movlw	1
  2915  0076B8  6E06               	movwf	(??_digitalWrite+1)^0,c
  2916  0076BA  2A05               	incf	??_digitalWrite^0,f,c
  2917  0076BC  EF62  F03B         	goto	u1144
  2918  0076C0                     u1145:
  2919  0076C0  90D8               	bcf	status,0,c
  2920  0076C2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2921  0076C4                     u1144:
  2922  0076C4  2E05               	decfsz	??_digitalWrite^0,f,c
  2923  0076C6  EF60  F03B         	goto	u1145
  2924  0076CA  5006               	movf	(??_digitalWrite+1)^0,w,c
  2925  0076CC  1281               	iorwf	129,f,c	;volatile
  2926  0076CE  EF2C  F03C         	goto	l63
  2927  0076D2                     l1731:
  2928  0076D2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2929  0076D6  0E01               	movlw	1
  2930  0076D8  6E06               	movwf	(??_digitalWrite+1)^0,c
  2931  0076DA  2A05               	incf	??_digitalWrite^0,f,c
  2932  0076DC  EF72  F03B         	goto	u1154
  2933  0076E0                     u1155:
  2934  0076E0  90D8               	bcf	status,0,c
  2935  0076E2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2936  0076E4                     u1154:
  2937  0076E4  2E05               	decfsz	??_digitalWrite^0,f,c
  2938  0076E6  EF70  F03B         	goto	u1155
  2939  0076EA  5006               	movf	(??_digitalWrite+1)^0,w,c
  2940  0076EC  0AFF               	xorlw	255
  2941  0076EE  1681               	andwf	129,f,c	;volatile
  2942  0076F0  EF2C  F03C         	goto	l63
  2943  0076F4                     l1733:
  2944  0076F4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2945  0076F6  EF88  F03B         	goto	u1160
  2946  0076FA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2947  0076FC  E107               	bnz	u1161
  2948  0076FE  0E18               	movlw	24
  2949  007700  5C01               	subwf	digitalWrite@pin^0,w,c
  2950  007702  B0D8               	btfsc	status,0,c
  2951  007704  EF86  F03B         	goto	u1161
  2952  007708  EF88  F03B         	goto	u1160
  2953  00770C                     u1161:
  2954  00770C  EFB6  F03B         	goto	l1741
  2955  007710                     u1160:
  2956  007710                     
  2957                           ;io.c: 24:         pin -=16;
  2958  007710  0EF0               	movlw	240
  2959  007712  2601               	addwf	digitalWrite@pin^0,f,c
  2960  007714  0EFF               	movlw	255
  2961  007716  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2962                           
  2963                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  2964  007718  5003               	movf	digitalWrite@value^0,w,c
  2965  00771A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2966  00771C  B4D8               	btfsc	status,2,c
  2967  00771E  EF93  F03B         	goto	u1171
  2968  007722  EF95  F03B         	goto	u1170
  2969  007726                     u1171:
  2970  007726  EFA5  F03B         	goto	l1739
  2971  00772A                     u1170:
  2972  00772A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2973  00772E  0E01               	movlw	1
  2974  007730  6E06               	movwf	(??_digitalWrite+1)^0,c
  2975  007732  2A05               	incf	??_digitalWrite^0,f,c
  2976  007734  EF9E  F03B         	goto	u1184
  2977  007738                     u1185:
  2978  007738  90D8               	bcf	status,0,c
  2979  00773A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2980  00773C                     u1184:
  2981  00773C  2E05               	decfsz	??_digitalWrite^0,f,c
  2982  00773E  EF9C  F03B         	goto	u1185
  2983  007742  5006               	movf	(??_digitalWrite+1)^0,w,c
  2984  007744  1282               	iorwf	130,f,c	;volatile
  2985  007746  EF2C  F03C         	goto	l63
  2986  00774A                     l1739:
  2987  00774A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2988  00774E  0E01               	movlw	1
  2989  007750  6E06               	movwf	(??_digitalWrite+1)^0,c
  2990  007752  2A05               	incf	??_digitalWrite^0,f,c
  2991  007754  EFAE  F03B         	goto	u1194
  2992  007758                     u1195:
  2993  007758  90D8               	bcf	status,0,c
  2994  00775A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2995  00775C                     u1194:
  2996  00775C  2E05               	decfsz	??_digitalWrite^0,f,c
  2997  00775E  EFAC  F03B         	goto	u1195
  2998  007762  5006               	movf	(??_digitalWrite+1)^0,w,c
  2999  007764  0AFF               	xorlw	255
  3000  007766  1682               	andwf	130,f,c	;volatile
  3001  007768  EF2C  F03C         	goto	l63
  3002  00776C                     l1741:
  3003  00776C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3004  00776E  EFC4  F03B         	goto	u1200
  3005  007772  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3006  007774  E107               	bnz	u1201
  3007  007776  0E20               	movlw	32
  3008  007778  5C01               	subwf	digitalWrite@pin^0,w,c
  3009  00777A  B0D8               	btfsc	status,0,c
  3010  00777C  EFC2  F03B         	goto	u1201
  3011  007780  EFC4  F03B         	goto	u1200
  3012  007784                     u1201:
  3013  007784  EFF2  F03B         	goto	l1749
  3014  007788                     u1200:
  3015  007788                     
  3016                           ;io.c: 28:         pin -=24;
  3017  007788  0EE8               	movlw	232
  3018  00778A  2601               	addwf	digitalWrite@pin^0,f,c
  3019  00778C  0EFF               	movlw	255
  3020  00778E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3021                           
  3022                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  3023  007790  5003               	movf	digitalWrite@value^0,w,c
  3024  007792  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3025  007794  B4D8               	btfsc	status,2,c
  3026  007796  EFCF  F03B         	goto	u1211
  3027  00779A  EFD1  F03B         	goto	u1210
  3028  00779E                     u1211:
  3029  00779E  EFE1  F03B         	goto	l1747
  3030  0077A2                     u1210:
  3031  0077A2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3032  0077A6  0E01               	movlw	1
  3033  0077A8  6E06               	movwf	(??_digitalWrite+1)^0,c
  3034  0077AA  2A05               	incf	??_digitalWrite^0,f,c
  3035  0077AC  EFDA  F03B         	goto	u1224
  3036  0077B0                     u1225:
  3037  0077B0  90D8               	bcf	status,0,c
  3038  0077B2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3039  0077B4                     u1224:
  3040  0077B4  2E05               	decfsz	??_digitalWrite^0,f,c
  3041  0077B6  EFD8  F03B         	goto	u1225
  3042  0077BA  5006               	movf	(??_digitalWrite+1)^0,w,c
  3043  0077BC  1283               	iorwf	131,f,c	;volatile
  3044  0077BE  EF2C  F03C         	goto	l63
  3045  0077C2                     l1747:
  3046  0077C2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3047  0077C6  0E01               	movlw	1
  3048  0077C8  6E06               	movwf	(??_digitalWrite+1)^0,c
  3049  0077CA  2A05               	incf	??_digitalWrite^0,f,c
  3050  0077CC  EFEA  F03B         	goto	u1234
  3051  0077D0                     u1235:
  3052  0077D0  90D8               	bcf	status,0,c
  3053  0077D2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3054  0077D4                     u1234:
  3055  0077D4  2E05               	decfsz	??_digitalWrite^0,f,c
  3056  0077D6  EFE8  F03B         	goto	u1235
  3057  0077DA  5006               	movf	(??_digitalWrite+1)^0,w,c
  3058  0077DC  0AFF               	xorlw	255
  3059  0077DE  1683               	andwf	131,f,c	;volatile
  3060  0077E0  EF2C  F03C         	goto	l63
  3061  0077E4                     l1749:
  3062  0077E4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3063  0077E6  EF00  F03C         	goto	u1240
  3064  0077EA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3065  0077EC  E107               	bnz	u1241
  3066  0077EE  0E28               	movlw	40
  3067  0077F0  5C01               	subwf	digitalWrite@pin^0,w,c
  3068  0077F2  B0D8               	btfsc	status,0,c
  3069  0077F4  EFFE  F03B         	goto	u1241
  3070  0077F8  EF00  F03C         	goto	u1240
  3071  0077FC                     u1241:
  3072  0077FC  EF2C  F03C         	goto	l63
  3073  007800                     u1240:
  3074  007800                     
  3075                           ;io.c: 32:         pin -=32;
  3076  007800  0EE0               	movlw	224
  3077  007802  2601               	addwf	digitalWrite@pin^0,f,c
  3078  007804  0EFF               	movlw	255
  3079  007806  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3080                           
  3081                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  3082  007808  5003               	movf	digitalWrite@value^0,w,c
  3083  00780A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3084  00780C  B4D8               	btfsc	status,2,c
  3085  00780E  EF0B  F03C         	goto	u1251
  3086  007812  EF0D  F03C         	goto	u1250
  3087  007816                     u1251:
  3088  007816  EF1D  F03C         	goto	l1755
  3089  00781A                     u1250:
  3090  00781A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3091  00781E  0E01               	movlw	1
  3092  007820  6E06               	movwf	(??_digitalWrite+1)^0,c
  3093  007822  2A05               	incf	??_digitalWrite^0,f,c
  3094  007824  EF16  F03C         	goto	u1264
  3095  007828                     u1265:
  3096  007828  90D8               	bcf	status,0,c
  3097  00782A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3098  00782C                     u1264:
  3099  00782C  2E05               	decfsz	??_digitalWrite^0,f,c
  3100  00782E  EF14  F03C         	goto	u1265
  3101  007832  5006               	movf	(??_digitalWrite+1)^0,w,c
  3102  007834  1284               	iorwf	132,f,c	;volatile
  3103  007836  EF2C  F03C         	goto	l63
  3104  00783A                     l1755:
  3105  00783A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3106  00783E  0E01               	movlw	1
  3107  007840  6E06               	movwf	(??_digitalWrite+1)^0,c
  3108  007842  2A05               	incf	??_digitalWrite^0,f,c
  3109  007844  EF26  F03C         	goto	u1274
  3110  007848                     u1275:
  3111  007848  90D8               	bcf	status,0,c
  3112  00784A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3113  00784C                     u1274:
  3114  00784C  2E05               	decfsz	??_digitalWrite^0,f,c
  3115  00784E  EF24  F03C         	goto	u1275
  3116  007852  5006               	movf	(??_digitalWrite+1)^0,w,c
  3117  007854  0AFF               	xorlw	255
  3118  007856  1684               	andwf	132,f,c	;volatile
  3119  007858                     l63:
  3120  007858  0012               	return		;funcret
  3121  00785A                     __end_of_digitalWrite:
  3122                           	callstack 0
  3123                           
  3124 ;; *************** function _Delay2ms *****************
  3125 ;; Defined at:
  3126 ;;		line 35 in file "lcd.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;		None
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;  i               1    1[COMRAM] unsigned char 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      void 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3140 ;;      Params:         0       0       0       0       0       0       0
  3141 ;;      Locals:         1       0       0       0       0       0       0
  3142 ;;      Temps:          0       0       0       0       0       0       0
  3143 ;;      Totals:         1       0       0       0       0       0       0
  3144 ;;Total ram usage:        1 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    1
  3147 ;; This function calls:
  3148 ;;		_Delay40us
  3149 ;; This function is called by:
  3150 ;;		_lcdCommand
  3151 ;;		_lcdInit
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text18
  3156  006F1C                     __ptext18:
  3157                           	callstack 0
  3158  006F1C                     _Delay2ms:
  3159                           	callstack 27
  3160  006F1C                     
  3161                           ;lcd.c: 36:   unsigned char i;;lcd.c: 37:   for (i = 0; i < 50; i++){
  3162  006F1C  0E00               	movlw	0
  3163  006F1E  6E02               	movwf	Delay2ms@i^0,c
  3164  006F20                     l1067:
  3165                           
  3166                           ;lcd.c: 38:     Delay40us();
  3167  006F20  EC67  F037         	call	_Delay40us	;wreg free
  3168  006F24                     
  3169                           ;lcd.c: 39:   }
  3170  006F24  2A02               	incf	Delay2ms@i^0,f,c
  3171  006F26  0E31               	movlw	49
  3172  006F28  6402               	cpfsgt	Delay2ms@i^0,c
  3173  006F2A  EF99  F037         	goto	u221
  3174  006F2E  EF9B  F037         	goto	u220
  3175  006F32                     u221:
  3176  006F32  EF90  F037         	goto	l1067
  3177  006F36                     u220:
  3178  006F36  0012               	return		;funcret
  3179  006F38                     __end_of_Delay2ms:
  3180                           	callstack 0
  3181                           
  3182 ;; *************** function _Delay40us *****************
  3183 ;; Defined at:
  3184 ;;		line 30 in file "lcd.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;		None
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;  i               1    0[COMRAM] unsigned char 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3198 ;;      Params:         0       0       0       0       0       0       0
  3199 ;;      Locals:         1       0       0       0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0
  3201 ;;      Totals:         1       0       0       0       0       0       0
  3202 ;;Total ram usage:        1 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_Delay2ms
  3208 ;;		_lcdCommand
  3209 ;;		_lcdData
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           	psect	text19
  3214  006ECE                     __ptext19:
  3215                           	callstack 0
  3216  006ECE                     _Delay40us:
  3217                           	callstack 28
  3218  006ECE                     
  3219                           ;lcd.c: 31:   unsigned char i;;lcd.c: 32:   for (i = 0; i < 25; i++);
  3220  006ECE  0E00               	movlw	0
  3221  006ED0  6E01               	movwf	Delay40us@i^0,c
  3222  006ED2                     l1017:
  3223  006ED2  2A01               	incf	Delay40us@i^0,f,c
  3224  006ED4  0E18               	movlw	24
  3225  006ED6  6401               	cpfsgt	Delay40us@i^0,c
  3226  006ED8  EF70  F037         	goto	u11
  3227  006EDC  EF72  F037         	goto	u10
  3228  006EE0                     u11:
  3229  006EE0  EF69  F037         	goto	l1017
  3230  006EE4                     u10:
  3231  006EE4  0012               	return		;funcret
  3232  006EE6                     __end_of_Delay40us:
  3233                           	callstack 0
  3234                           
  3235 ;; *************** function ___awmod *****************
  3236 ;; Defined at:
  3237 ;;		line 7 in file "D:\Pasta de Programas\Microchip\xc8\v2.30\pic\sources\c99\common\awmod.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  dividend        2    8[COMRAM] int 
  3240 ;;  divisor         2   10[COMRAM] int 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  sign            1   13[COMRAM] unsigned char 
  3243 ;;  counter         1   12[COMRAM] unsigned char 
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  2    8[COMRAM] int 
  3246 ;; Registers used:
  3247 ;;		wreg, status,2, status,0
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3253 ;;      Params:         4       0       0       0       0       0       0
  3254 ;;      Locals:         2       0       0       0       0       0       0
  3255 ;;      Temps:          0       0       0       0       0       0       0
  3256 ;;      Totals:         6       0       0       0       0       0       0
  3257 ;;Total ram usage:        6 bytes
  3258 ;; Hardware stack levels used:    1
  3259 ;; This function calls:
  3260 ;;		Nothing
  3261 ;; This function is called by:
  3262 ;;		_print
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           	psect	text20
  3267  0071F2                     __ptext20:
  3268                           	callstack 0
  3269  0071F2                     ___awmod:
  3270                           	callstack 29
  3271  0071F2  0E00               	movlw	0
  3272  0071F4  6E0E               	movwf	___awmod@sign^0,c
  3273  0071F6  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  3274  0071F8  EF02  F039         	goto	u1360
  3275  0071FC  EF00  F039         	goto	u1361
  3276  007200                     u1361:
  3277  007200  EF08  F039         	goto	l1847
  3278  007204                     u1360:
  3279  007204  6C09               	negf	___awmod@dividend^0,c
  3280  007206  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  3281  007208  B0D8               	btfsc	status,0,c
  3282  00720A  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  3283  00720C  0E01               	movlw	1
  3284  00720E  6E0E               	movwf	___awmod@sign^0,c
  3285  007210                     l1847:
  3286  007210  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  3287  007212  EF0F  F039         	goto	u1370
  3288  007216  EF0D  F039         	goto	u1371
  3289  00721A                     u1371:
  3290  00721A  EF13  F039         	goto	l1851
  3291  00721E                     u1370:
  3292  00721E  6C0B               	negf	___awmod@divisor^0,c
  3293  007220  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  3294  007222  B0D8               	btfsc	status,0,c
  3295  007224  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  3296  007226                     l1851:
  3297  007226  500B               	movf	___awmod@divisor^0,w,c
  3298  007228  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  3299  00722A  B4D8               	btfsc	status,2,c
  3300  00722C  EF1A  F039         	goto	u1381
  3301  007230  EF1C  F039         	goto	u1380
  3302  007234                     u1381:
  3303  007234  EF40  F039         	goto	l1867
  3304  007238                     u1380:
  3305  007238  0E01               	movlw	1
  3306  00723A  6E0D               	movwf	___awmod@counter^0,c
  3307  00723C  EF24  F039         	goto	l1857
  3308  007240                     l1855:
  3309  007240  90D8               	bcf	status,0,c
  3310  007242  360B               	rlcf	___awmod@divisor^0,f,c
  3311  007244  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  3312  007246  2A0D               	incf	___awmod@counter^0,f,c
  3313  007248                     l1857:
  3314  007248  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  3315  00724A  EF29  F039         	goto	u1391
  3316  00724E  EF2B  F039         	goto	u1390
  3317  007252                     u1391:
  3318  007252  EF20  F039         	goto	l1855
  3319  007256                     u1390:
  3320  007256                     l1859:
  3321  007256  500B               	movf	___awmod@divisor^0,w,c
  3322  007258  5C09               	subwf	___awmod@dividend^0,w,c
  3323  00725A  500C               	movf	(___awmod@divisor+1)^0,w,c
  3324  00725C  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  3325  00725E  A0D8               	btfss	status,0,c
  3326  007260  EF34  F039         	goto	u1401
  3327  007264  EF36  F039         	goto	u1400
  3328  007268                     u1401:
  3329  007268  EF3A  F039         	goto	l1863
  3330  00726C                     u1400:
  3331  00726C  500B               	movf	___awmod@divisor^0,w,c
  3332  00726E  5E09               	subwf	___awmod@dividend^0,f,c
  3333  007270  500C               	movf	(___awmod@divisor+1)^0,w,c
  3334  007272  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  3335  007274                     l1863:
  3336  007274  90D8               	bcf	status,0,c
  3337  007276  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  3338  007278  320B               	rrcf	___awmod@divisor^0,f,c
  3339  00727A  2E0D               	decfsz	___awmod@counter^0,f,c
  3340  00727C  EF2B  F039         	goto	l1859
  3341  007280                     l1867:
  3342  007280  500E               	movf	___awmod@sign^0,w,c
  3343  007282  B4D8               	btfsc	status,2,c
  3344  007284  EF46  F039         	goto	u1411
  3345  007288  EF48  F039         	goto	u1410
  3346  00728C                     u1411:
  3347  00728C  EF4C  F039         	goto	l1871
  3348  007290                     u1410:
  3349  007290  6C09               	negf	___awmod@dividend^0,c
  3350  007292  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  3351  007294  B0D8               	btfsc	status,0,c
  3352  007296  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  3353  007298                     l1871:
  3354  007298  C009  F009         	movff	___awmod@dividend,?___awmod
  3355  00729C  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  3356  0072A0  0012               	return		;funcret
  3357  0072A2                     __end_of___awmod:
  3358                           	callstack 0
  3359                           
  3360 ;; *************** function ___awdiv *****************
  3361 ;; Defined at:
  3362 ;;		line 7 in file "D:\Pasta de Programas\Microchip\xc8\v2.30\pic\sources\c99\common\awdiv.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  dividend        2    0[COMRAM] int 
  3365 ;;  divisor         2    2[COMRAM] int 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  quotient        2    6[COMRAM] int 
  3368 ;;  sign            1    5[COMRAM] unsigned char 
  3369 ;;  counter         1    4[COMRAM] unsigned char 
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  2    0[COMRAM] int 
  3372 ;; Registers used:
  3373 ;;		wreg, status,2, status,0
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3379 ;;      Params:         4       0       0       0       0       0       0
  3380 ;;      Locals:         4       0       0       0       0       0       0
  3381 ;;      Temps:          0       0       0       0       0       0       0
  3382 ;;      Totals:         8       0       0       0       0       0       0
  3383 ;;Total ram usage:        8 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; This function calls:
  3386 ;;		Nothing
  3387 ;; This function is called by:
  3388 ;;		_print
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text21
  3393  0072A2                     __ptext21:
  3394                           	callstack 0
  3395  0072A2                     ___awdiv:
  3396                           	callstack 29
  3397  0072A2  0E00               	movlw	0
  3398  0072A4  6E06               	movwf	___awdiv@sign^0,c
  3399  0072A6  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3400  0072A8  EF5A  F039         	goto	u1300
  3401  0072AC  EF58  F039         	goto	u1301
  3402  0072B0                     u1301:
  3403  0072B0  EF60  F039         	goto	l1803
  3404  0072B4                     u1300:
  3405  0072B4  6C03               	negf	___awdiv@divisor^0,c
  3406  0072B6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3407  0072B8  B0D8               	btfsc	status,0,c
  3408  0072BA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3409  0072BC  0E01               	movlw	1
  3410  0072BE  6E06               	movwf	___awdiv@sign^0,c
  3411  0072C0                     l1803:
  3412  0072C0  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3413  0072C2  EF67  F039         	goto	u1310
  3414  0072C6  EF65  F039         	goto	u1311
  3415  0072CA                     u1311:
  3416  0072CA  EF6D  F039         	goto	l1809
  3417  0072CE                     u1310:
  3418  0072CE  6C01               	negf	___awdiv@dividend^0,c
  3419  0072D0  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3420  0072D2  B0D8               	btfsc	status,0,c
  3421  0072D4  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3422  0072D6  0E01               	movlw	1
  3423  0072D8  1A06               	xorwf	___awdiv@sign^0,f,c
  3424  0072DA                     l1809:
  3425  0072DA  0E00               	movlw	0
  3426  0072DC  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3427  0072DE  0E00               	movlw	0
  3428  0072E0  6E07               	movwf	___awdiv@quotient^0,c
  3429  0072E2  5003               	movf	___awdiv@divisor^0,w,c
  3430  0072E4  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3431  0072E6  B4D8               	btfsc	status,2,c
  3432  0072E8  EF78  F039         	goto	u1321
  3433  0072EC  EF7A  F039         	goto	u1320
  3434  0072F0                     u1321:
  3435  0072F0  EFA2  F039         	goto	l1831
  3436  0072F4                     u1320:
  3437  0072F4  0E01               	movlw	1
  3438  0072F6  6E05               	movwf	___awdiv@counter^0,c
  3439  0072F8  EF82  F039         	goto	l1817
  3440  0072FC                     l1815:
  3441  0072FC  90D8               	bcf	status,0,c
  3442  0072FE  3603               	rlcf	___awdiv@divisor^0,f,c
  3443  007300  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3444  007302  2A05               	incf	___awdiv@counter^0,f,c
  3445  007304                     l1817:
  3446  007304  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3447  007306  EF87  F039         	goto	u1331
  3448  00730A  EF89  F039         	goto	u1330
  3449  00730E                     u1331:
  3450  00730E  EF7E  F039         	goto	l1815
  3451  007312                     u1330:
  3452  007312                     l1819:
  3453  007312  90D8               	bcf	status,0,c
  3454  007314  3607               	rlcf	___awdiv@quotient^0,f,c
  3455  007316  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3456  007318  5003               	movf	___awdiv@divisor^0,w,c
  3457  00731A  5C01               	subwf	___awdiv@dividend^0,w,c
  3458  00731C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3459  00731E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3460  007320  A0D8               	btfss	status,0,c
  3461  007322  EF95  F039         	goto	u1341
  3462  007326  EF97  F039         	goto	u1340
  3463  00732A                     u1341:
  3464  00732A  EF9C  F039         	goto	l1827
  3465  00732E                     u1340:
  3466  00732E  5003               	movf	___awdiv@divisor^0,w,c
  3467  007330  5E01               	subwf	___awdiv@dividend^0,f,c
  3468  007332  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3469  007334  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3470  007336  8007               	bsf	___awdiv@quotient^0,0,c
  3471  007338                     l1827:
  3472  007338  90D8               	bcf	status,0,c
  3473  00733A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3474  00733C  3203               	rrcf	___awdiv@divisor^0,f,c
  3475  00733E  2E05               	decfsz	___awdiv@counter^0,f,c
  3476  007340  EF89  F039         	goto	l1819
  3477  007344                     l1831:
  3478  007344  5006               	movf	___awdiv@sign^0,w,c
  3479  007346  B4D8               	btfsc	status,2,c
  3480  007348  EFA8  F039         	goto	u1351
  3481  00734C  EFAA  F039         	goto	u1350
  3482  007350                     u1351:
  3483  007350  EFAE  F039         	goto	l1835
  3484  007354                     u1350:
  3485  007354  6C07               	negf	___awdiv@quotient^0,c
  3486  007356  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3487  007358  B0D8               	btfsc	status,0,c
  3488  00735A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3489  00735C                     l1835:
  3490  00735C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3491  007360  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3492  007364  0012               	return		;funcret
  3493  007366                     __end_of___awdiv:
  3494                           	callstack 0
  3495                           
  3496 ;; *************** function _checarADC *****************
  3497 ;; Defined at:
  3498 ;;		line 77 in file "main_projeto.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;		None
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;		None
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  1    wreg      void 
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3512 ;;      Params:         0       0       0       0       0       0       0
  3513 ;;      Locals:         0       0       0       0       0       0       0
  3514 ;;      Temps:          0       0       0       0       0       0       0
  3515 ;;      Totals:         0       0       0       0       0       0       0
  3516 ;;Total ram usage:        0 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    1
  3519 ;; This function calls:
  3520 ;;		_adc_amostra
  3521 ;; This function is called by:
  3522 ;;		_main
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           	psect	text22
  3527  006F00                     __ptext22:
  3528                           	callstack 0
  3529  006F00                     _checarADC:
  3530                           	callstack 29
  3531  006F00                     
  3532                           ;main_projeto.c: 78:   velocity = adc_amostra() >> 3;
  3533  006F00  ECDB  F037         	call	_adc_amostra	;wreg free
  3534  006F04  90D8               	bcf	status,0,c
  3535  006F06  3202               	rrcf	(?_adc_amostra+1)^0,f,c
  3536  006F08  3201               	rrcf	?_adc_amostra^0,f,c
  3537  006F0A  90D8               	bcf	status,0,c
  3538  006F0C  3202               	rrcf	(?_adc_amostra+1)^0,f,c
  3539  006F0E  3201               	rrcf	?_adc_amostra^0,f,c
  3540  006F10  90D8               	bcf	status,0,c
  3541  006F12  3202               	rrcf	(?_adc_amostra+1)^0,f,c
  3542  006F14  3201               	rrcf	?_adc_amostra^0,f,c
  3543  006F16  5001               	movf	?_adc_amostra^0,w,c
  3544  006F18  6E3B               	movwf	_velocity^0,c
  3545  006F1A  0012               	return		;funcret
  3546  006F1C                     __end_of_checarADC:
  3547                           	callstack 0
  3548                           
  3549 ;; *************** function _adc_amostra *****************
  3550 ;; Defined at:
  3551 ;;		line 40 in file "adc.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;		None
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;		None
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  2    0[COMRAM] unsigned int 
  3558 ;; Registers used:
  3559 ;;		wreg, status,2, status,0
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3565 ;;      Params:         2       0       0       0       0       0       0
  3566 ;;      Locals:         0       0       0       0       0       0       0
  3567 ;;      Temps:          4       0       0       0       0       0       0
  3568 ;;      Totals:         6       0       0       0       0       0       0
  3569 ;;Total ram usage:        6 bytes
  3570 ;; Hardware stack levels used:    1
  3571 ;; This function calls:
  3572 ;;		Nothing
  3573 ;; This function is called by:
  3574 ;;		_checarADC
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           	psect	text23
  3579  006FB6                     __ptext23:
  3580                           	callstack 0
  3581  006FB6                     _adc_amostra:
  3582                           	callstack 29
  3583  006FB6                     
  3584                           ;adc.c: 41:   ADCON0 = 0x01;
  3585  006FB6  0E01               	movlw	1
  3586  006FB8  6EC2               	movwf	194,c	;volatile
  3587  006FBA                     
  3588                           ;adc.c: 42:   ADCON0bits.GO = 1;
  3589  006FBA  82C2               	bsf	194,1,c	;volatile
  3590  006FBC                     l18:
  3591  006FBC  B2C2               	btfsc	194,1,c	;volatile
  3592  006FBE  EFE3  F037         	goto	u1421
  3593  006FC2  EFE5  F037         	goto	u1420
  3594  006FC6                     u1421:
  3595  006FC6  EFDE  F037         	goto	l18
  3596  006FCA                     u1420:
  3597  006FCA                     
  3598                           ;adc.c: 45:   return ((((unsigned int) ADRESH) << 2) | (ADRESL >> 6));
  3599  006FCA  CFC3 F003          	movff	4035,??_adc_amostra	;volatile
  3600  006FCE  0E06               	movlw	6
  3601  006FD0  6E04               	movwf	(??_adc_amostra+1)^0,c
  3602  006FD2                     u1435:
  3603  006FD2  90D8               	bcf	status,0,c
  3604  006FD4  3203               	rrcf	??_adc_amostra^0,f,c
  3605  006FD6  2E04               	decfsz	(??_adc_amostra+1)^0,f,c
  3606  006FD8  EFE9  F037         	goto	u1435
  3607  006FDC  5003               	movf	??_adc_amostra^0,w,c
  3608  006FDE  CFC4 F005          	movff	4036,??_adc_amostra+2	;volatile
  3609  006FE2  6A06               	clrf	(??_adc_amostra+3)^0,c
  3610  006FE4  90D8               	bcf	status,0,c
  3611  006FE6  3605               	rlcf	(??_adc_amostra+2)^0,f,c
  3612  006FE8  3606               	rlcf	(??_adc_amostra+3)^0,f,c
  3613  006FEA  90D8               	bcf	status,0,c
  3614  006FEC  3605               	rlcf	(??_adc_amostra+2)^0,f,c
  3615  006FEE  3606               	rlcf	(??_adc_amostra+3)^0,f,c
  3616  006FF0  1005               	iorwf	(??_adc_amostra+2)^0,w,c
  3617  006FF2  6E01               	movwf	?_adc_amostra^0,c
  3618  006FF4  5006               	movf	(??_adc_amostra+3)^0,w,c
  3619  006FF6  6E02               	movwf	(?_adc_amostra+1)^0,c
  3620  006FF8  0012               	return		;funcret
  3621  006FFA                     __end_of_adc_amostra:
  3622                           	callstack 0
  3623                           
  3624 ;; *************** function ___wmul *****************
  3625 ;; Defined at:
  3626 ;;		line 15 in file "D:\Pasta de Programas\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  multiplier      2    0[COMRAM] unsigned int 
  3629 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;  product         2    4[COMRAM] unsigned int 
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  2    0[COMRAM] unsigned int 
  3634 ;; Registers used:
  3635 ;;		wreg, status,2, status,0, prodl, prodh
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3641 ;;      Params:         4       0       0       0       0       0       0
  3642 ;;      Locals:         2       0       0       0       0       0       0
  3643 ;;      Temps:          0       0       0       0       0       0       0
  3644 ;;      Totals:         6       0       0       0       0       0       0
  3645 ;;Total ram usage:        6 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		_main
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text24
  3655  006F5A                     __ptext24:
  3656                           	callstack 0
  3657  006F5A                     ___wmul:
  3658                           	callstack 30
  3659  006F5A  5001               	movf	___wmul@multiplier^0,w,c
  3660  006F5C  0203               	mulwf	___wmul@multiplicand^0,c
  3661  006F5E  CFF3 F005          	movff	prodl,___wmul@product
  3662  006F62  CFF4 F006          	movff	prodh,___wmul@product+1
  3663  006F66  5001               	movf	___wmul@multiplier^0,w,c
  3664  006F68  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3665  006F6A  50F3               	movf	243,w,c
  3666  006F6C  2606               	addwf	(___wmul@product+1)^0,f,c
  3667  006F6E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3668  006F70  0203               	mulwf	___wmul@multiplicand^0,c
  3669  006F72  50F3               	movf	243,w,c
  3670  006F74  2606               	addwf	(___wmul@product+1)^0,f,c
  3671  006F76  C005  F001         	movff	___wmul@product,?___wmul
  3672  006F7A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3673  006F7E  0012               	return		;funcret
  3674  006F80                     __end_of___wmul:
  3675                           	callstack 0
  3676                           
  3677 ;; *************** function ___aldiv *****************
  3678 ;; Defined at:
  3679 ;;		line 7 in file "D:\Pasta de Programas\Microchip\xc8\v2.30\pic\sources\c99\common\aldiv.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  dividend        4    6[COMRAM] long 
  3682 ;;  divisor         4   10[COMRAM] long 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  quotient        4   16[COMRAM] long 
  3685 ;;  sign            1   15[COMRAM] unsigned char 
  3686 ;;  counter         1   14[COMRAM] unsigned char 
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  4    6[COMRAM] long 
  3689 ;; Registers used:
  3690 ;;		wreg, status,2, status,0
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3696 ;;      Params:         8       0       0       0       0       0       0
  3697 ;;      Locals:         6       0       0       0       0       0       0
  3698 ;;      Temps:          0       0       0       0       0       0       0
  3699 ;;      Totals:        14       0       0       0       0       0       0
  3700 ;;Total ram usage:       14 bytes
  3701 ;; Hardware stack levels used:    1
  3702 ;; This function calls:
  3703 ;;		Nothing
  3704 ;; This function is called by:
  3705 ;;		_main
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           	psect	text25
  3710  007366                     __ptext25:
  3711                           	callstack 0
  3712  007366                     ___aldiv:
  3713                           	callstack 30
  3714  007366  0E00               	movlw	0
  3715  007368  6E10               	movwf	___aldiv@sign^0,c
  3716  00736A  BE0E               	btfsc	(___aldiv@divisor+3)^0,7,c
  3717  00736C  EFBC  F039         	goto	u1770
  3718  007370  EFBA  F039         	goto	u1771
  3719  007374                     u1771:
  3720  007374  EFC6  F039         	goto	l2081
  3721  007378                     u1770:
  3722  007378  1E0E               	comf	(___aldiv@divisor+3)^0,f,c
  3723  00737A  1E0D               	comf	(___aldiv@divisor+2)^0,f,c
  3724  00737C  1E0C               	comf	(___aldiv@divisor+1)^0,f,c
  3725  00737E  6C0B               	negf	___aldiv@divisor^0,c
  3726  007380  0E00               	movlw	0
  3727  007382  220C               	addwfc	(___aldiv@divisor+1)^0,f,c
  3728  007384  220D               	addwfc	(___aldiv@divisor+2)^0,f,c
  3729  007386  220E               	addwfc	(___aldiv@divisor+3)^0,f,c
  3730  007388  0E01               	movlw	1
  3731  00738A  6E10               	movwf	___aldiv@sign^0,c
  3732  00738C                     l2081:
  3733  00738C  BE0A               	btfsc	(___aldiv@dividend+3)^0,7,c
  3734  00738E  EFCD  F039         	goto	u1780
  3735  007392  EFCB  F039         	goto	u1781
  3736  007396                     u1781:
  3737  007396  EFD7  F039         	goto	l2087
  3738  00739A                     u1780:
  3739  00739A  1E0A               	comf	(___aldiv@dividend+3)^0,f,c
  3740  00739C  1E09               	comf	(___aldiv@dividend+2)^0,f,c
  3741  00739E  1E08               	comf	(___aldiv@dividend+1)^0,f,c
  3742  0073A0  6C07               	negf	___aldiv@dividend^0,c
  3743  0073A2  0E00               	movlw	0
  3744  0073A4  2208               	addwfc	(___aldiv@dividend+1)^0,f,c
  3745  0073A6  2209               	addwfc	(___aldiv@dividend+2)^0,f,c
  3746  0073A8  220A               	addwfc	(___aldiv@dividend+3)^0,f,c
  3747  0073AA  0E01               	movlw	1
  3748  0073AC  1A10               	xorwf	___aldiv@sign^0,f,c
  3749  0073AE                     l2087:
  3750  0073AE  0E00               	movlw	0
  3751  0073B0  6E11               	movwf	___aldiv@quotient^0,c
  3752  0073B2  0E00               	movlw	0
  3753  0073B4  6E12               	movwf	(___aldiv@quotient+1)^0,c
  3754  0073B6  0E00               	movlw	0
  3755  0073B8  6E13               	movwf	(___aldiv@quotient+2)^0,c
  3756  0073BA  0E00               	movlw	0
  3757  0073BC  6E14               	movwf	(___aldiv@quotient+3)^0,c
  3758  0073BE  500B               	movf	___aldiv@divisor^0,w,c
  3759  0073C0  100C               	iorwf	(___aldiv@divisor+1)^0,w,c
  3760  0073C2  100D               	iorwf	(___aldiv@divisor+2)^0,w,c
  3761  0073C4  100E               	iorwf	(___aldiv@divisor+3)^0,w,c
  3762  0073C6  B4D8               	btfsc	status,2,c
  3763  0073C8  EFE8  F039         	goto	u1791
  3764  0073CC  EFEA  F039         	goto	u1790
  3765  0073D0                     u1791:
  3766  0073D0  EF20  F03A         	goto	l2109
  3767  0073D4                     u1790:
  3768  0073D4  0E01               	movlw	1
  3769  0073D6  6E0F               	movwf	___aldiv@counter^0,c
  3770  0073D8  EFF4  F039         	goto	l2095
  3771  0073DC                     l2093:
  3772  0073DC  90D8               	bcf	status,0,c
  3773  0073DE  360B               	rlcf	___aldiv@divisor^0,f,c
  3774  0073E0  360C               	rlcf	(___aldiv@divisor+1)^0,f,c
  3775  0073E2  360D               	rlcf	(___aldiv@divisor+2)^0,f,c
  3776  0073E4  360E               	rlcf	(___aldiv@divisor+3)^0,f,c
  3777  0073E6  2A0F               	incf	___aldiv@counter^0,f,c
  3778  0073E8                     l2095:
  3779  0073E8  AE0E               	btfss	(___aldiv@divisor+3)^0,7,c
  3780  0073EA  EFF9  F039         	goto	u1801
  3781  0073EE  EFFB  F039         	goto	u1800
  3782  0073F2                     u1801:
  3783  0073F2  EFEE  F039         	goto	l2093
  3784  0073F6                     u1800:
  3785  0073F6                     l2097:
  3786  0073F6  90D8               	bcf	status,0,c
  3787  0073F8  3611               	rlcf	___aldiv@quotient^0,f,c
  3788  0073FA  3612               	rlcf	(___aldiv@quotient+1)^0,f,c
  3789  0073FC  3613               	rlcf	(___aldiv@quotient+2)^0,f,c
  3790  0073FE  3614               	rlcf	(___aldiv@quotient+3)^0,f,c
  3791  007400  500B               	movf	___aldiv@divisor^0,w,c
  3792  007402  5C07               	subwf	___aldiv@dividend^0,w,c
  3793  007404  500C               	movf	(___aldiv@divisor+1)^0,w,c
  3794  007406  5808               	subwfb	(___aldiv@dividend+1)^0,w,c
  3795  007408  500D               	movf	(___aldiv@divisor+2)^0,w,c
  3796  00740A  5809               	subwfb	(___aldiv@dividend+2)^0,w,c
  3797  00740C  500E               	movf	(___aldiv@divisor+3)^0,w,c
  3798  00740E  580A               	subwfb	(___aldiv@dividend+3)^0,w,c
  3799  007410  A0D8               	btfss	status,0,c
  3800  007412  EF0D  F03A         	goto	u1811
  3801  007416  EF0F  F03A         	goto	u1810
  3802  00741A                     u1811:
  3803  00741A  EF18  F03A         	goto	l2105
  3804  00741E                     u1810:
  3805  00741E  500B               	movf	___aldiv@divisor^0,w,c
  3806  007420  5E07               	subwf	___aldiv@dividend^0,f,c
  3807  007422  500C               	movf	(___aldiv@divisor+1)^0,w,c
  3808  007424  5A08               	subwfb	(___aldiv@dividend+1)^0,f,c
  3809  007426  500D               	movf	(___aldiv@divisor+2)^0,w,c
  3810  007428  5A09               	subwfb	(___aldiv@dividend+2)^0,f,c
  3811  00742A  500E               	movf	(___aldiv@divisor+3)^0,w,c
  3812  00742C  5A0A               	subwfb	(___aldiv@dividend+3)^0,f,c
  3813  00742E  8011               	bsf	___aldiv@quotient^0,0,c
  3814  007430                     l2105:
  3815  007430  90D8               	bcf	status,0,c
  3816  007432  320E               	rrcf	(___aldiv@divisor+3)^0,f,c
  3817  007434  320D               	rrcf	(___aldiv@divisor+2)^0,f,c
  3818  007436  320C               	rrcf	(___aldiv@divisor+1)^0,f,c
  3819  007438  320B               	rrcf	___aldiv@divisor^0,f,c
  3820  00743A  2E0F               	decfsz	___aldiv@counter^0,f,c
  3821  00743C  EFFB  F039         	goto	l2097
  3822  007440                     l2109:
  3823  007440  5010               	movf	___aldiv@sign^0,w,c
  3824  007442  B4D8               	btfsc	status,2,c
  3825  007444  EF26  F03A         	goto	u1821
  3826  007448  EF28  F03A         	goto	u1820
  3827  00744C                     u1821:
  3828  00744C  EF30  F03A         	goto	l2113
  3829  007450                     u1820:
  3830  007450  1E14               	comf	(___aldiv@quotient+3)^0,f,c
  3831  007452  1E13               	comf	(___aldiv@quotient+2)^0,f,c
  3832  007454  1E12               	comf	(___aldiv@quotient+1)^0,f,c
  3833  007456  6C11               	negf	___aldiv@quotient^0,c
  3834  007458  0E00               	movlw	0
  3835  00745A  2212               	addwfc	(___aldiv@quotient+1)^0,f,c
  3836  00745C  2213               	addwfc	(___aldiv@quotient+2)^0,f,c
  3837  00745E  2214               	addwfc	(___aldiv@quotient+3)^0,f,c
  3838  007460                     l2113:
  3839  007460  C011  F007         	movff	___aldiv@quotient,?___aldiv
  3840  007464  C012  F008         	movff	___aldiv@quotient+1,?___aldiv+1
  3841  007468  C013  F009         	movff	___aldiv@quotient+2,?___aldiv+2
  3842  00746C  C014  F00A         	movff	___aldiv@quotient+3,?___aldiv+3
  3843  007470  0012               	return		;funcret
  3844  007472                     __end_of___aldiv:
  3845                           	callstack 0
  3846  0000                     
  3847                           	psect	rparam
  3848  0000                     
  3849                           	psect	idloc
  3850                           
  3851                           ;Config register IDLOC0 @ 0x200000
  3852                           ;	unspecified, using default values
  3853  200000                     	org	2097152
  3854  200000  FF                 	db	255
  3855                           
  3856                           ;Config register IDLOC1 @ 0x200001
  3857                           ;	unspecified, using default values
  3858  200001                     	org	2097153
  3859  200001  FF                 	db	255
  3860                           
  3861                           ;Config register IDLOC2 @ 0x200002
  3862                           ;	unspecified, using default values
  3863  200002                     	org	2097154
  3864  200002  FF                 	db	255
  3865                           
  3866                           ;Config register IDLOC3 @ 0x200003
  3867                           ;	unspecified, using default values
  3868  200003                     	org	2097155
  3869  200003  FF                 	db	255
  3870                           
  3871                           ;Config register IDLOC4 @ 0x200004
  3872                           ;	unspecified, using default values
  3873  200004                     	org	2097156
  3874  200004  FF                 	db	255
  3875                           
  3876                           ;Config register IDLOC5 @ 0x200005
  3877                           ;	unspecified, using default values
  3878  200005                     	org	2097157
  3879  200005  FF                 	db	255
  3880                           
  3881                           ;Config register IDLOC6 @ 0x200006
  3882                           ;	unspecified, using default values
  3883  200006                     	org	2097158
  3884  200006  FF                 	db	255
  3885                           
  3886                           ;Config register IDLOC7 @ 0x200007
  3887                           ;	unspecified, using default values
  3888  200007                     	org	2097159
  3889  200007  FF                 	db	255
  3890                           
  3891                           	psect	config
  3892                           
  3893                           ; Padding undefined space
  3894  300000                     	org	3145728
  3895  300000  FF                 	db	255
  3896                           
  3897                           ;Config register CONFIG1H @ 0x300001
  3898                           ;	Oscillator Selection bits
  3899                           ;	OSC = HS, HS oscillator
  3900                           ;	Fail-Safe Clock Monitor Enable bit
  3901                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3902                           ;	Internal/External Oscillator Switchover bit
  3903                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3904  300001                     	org	3145729
  3905  300001  02                 	db	2
  3906                           
  3907                           ;Config register CONFIG2L @ 0x300002
  3908                           ;	Power-up Timer Enable bit
  3909                           ;	PWRT = OFF, PWRT disabled
  3910                           ;	Brown-out Reset Enable bits
  3911                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3912                           ;	Brown Out Reset Voltage bits
  3913                           ;	BORV = 0x2E, user specified literal
  3914  300002                     	org	3145730
  3915  300002  71                 	db	369
  3916                           
  3917                           ;Config register CONFIG2H @ 0x300003
  3918                           ;	Watchdog Timer Enable bit
  3919                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3920                           ;	Watchdog Timer Postscale Select bits
  3921                           ;	WDTPS = 1, 1:1
  3922  300003                     	org	3145731
  3923  300003  00                 	db	0
  3924                           
  3925                           ; Padding undefined space
  3926  300004                     	org	3145732
  3927  300004  FF                 	db	255
  3928                           
  3929                           ;Config register CONFIG3H @ 0x300005
  3930                           ;	CCP2 MUX bit
  3931                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3932                           ;	PORTB A/D Enable bit
  3933                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3934                           ;	Low-Power Timer1 Oscillator Enable bit
  3935                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3936                           ;	MCLR Pin Enable bit
  3937                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3938  300005                     	org	3145733
  3939  300005  83                 	db	131
  3940                           
  3941                           ;Config register CONFIG4L @ 0x300006
  3942                           ;	Stack Full/Underflow Reset Enable bit
  3943                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3944                           ;	Single-Supply ICSP Enable bit
  3945                           ;	LVP = OFF, Single-Supply ICSP disabled
  3946                           ;	Extended Instruction Set Enable bit
  3947                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3948                           ;	Background Debugger Enable bit
  3949                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3950  300006                     	org	3145734
  3951  300006  80                 	db	128
  3952                           
  3953                           ; Padding undefined space
  3954  300007                     	org	3145735
  3955  300007  FF                 	db	255
  3956                           
  3957                           ;Config register CONFIG5L @ 0x300008
  3958                           ;	Code Protection bit
  3959                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3960                           ;	Code Protection bit
  3961                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3962                           ;	Code Protection bit
  3963                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3964                           ;	Code Protection bit
  3965                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3966  300008                     	org	3145736
  3967  300008  0F                 	db	15
  3968                           
  3969                           ;Config register CONFIG5H @ 0x300009
  3970                           ;	Boot Block Code Protection bit
  3971                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3972                           ;	Data EEPROM Code Protection bit
  3973                           ;	CPD = OFF, Data EEPROM not code-protected
  3974  300009                     	org	3145737
  3975  300009  C0                 	db	192
  3976                           
  3977                           ;Config register CONFIG6L @ 0x30000A
  3978                           ;	Write Protection bit
  3979                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3980                           ;	Write Protection bit
  3981                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3982                           ;	Write Protection bit
  3983                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3984                           ;	Write Protection bit
  3985                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3986  30000A                     	org	3145738
  3987  30000A  0F                 	db	15
  3988                           
  3989                           ;Config register CONFIG6H @ 0x30000B
  3990                           ;	Configuration Register Write Protection bit
  3991                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3992                           ;	Boot Block Write Protection bit
  3993                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3994                           ;	Data EEPROM Write Protection bit
  3995                           ;	WRTD = OFF, Data EEPROM not write-protected
  3996  30000B                     	org	3145739
  3997  30000B  E0                 	db	224
  3998                           
  3999                           ;Config register CONFIG7L @ 0x30000C
  4000                           ;	Table Read Protection bit
  4001                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4002                           ;	Table Read Protection bit
  4003                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4004                           ;	Table Read Protection bit
  4005                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4006                           ;	Table Read Protection bit
  4007                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4008  30000C                     	org	3145740
  4009  30000C  0F                 	db	15
  4010                           
  4011                           ;Config register CONFIG7H @ 0x30000D
  4012                           ;	Boot Block Table Read Protection bit
  4013                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4014  30000D                     	org	3145741
  4015  30000D  40                 	db	64
  4016                           tosu	equ	0xFFF
  4017                           tosh	equ	0xFFE
  4018                           tosl	equ	0xFFD
  4019                           stkptr	equ	0xFFC
  4020                           pclatu	equ	0xFFB
  4021                           pclath	equ	0xFFA
  4022                           pcl	equ	0xFF9
  4023                           tblptru	equ	0xFF8
  4024                           tblptrh	equ	0xFF7
  4025                           tblptrl	equ	0xFF6
  4026                           tablat	equ	0xFF5
  4027                           prodh	equ	0xFF4
  4028                           prodl	equ	0xFF3
  4029                           indf0	equ	0xFEF
  4030                           postinc0	equ	0xFEE
  4031                           postdec0	equ	0xFED
  4032                           preinc0	equ	0xFEC
  4033                           plusw0	equ	0xFEB
  4034                           fsr0h	equ	0xFEA
  4035                           fsr0l	equ	0xFE9
  4036                           wreg	equ	0xFE8
  4037                           indf1	equ	0xFE7
  4038                           postinc1	equ	0xFE6
  4039                           postdec1	equ	0xFE5
  4040                           preinc1	equ	0xFE4
  4041                           plusw1	equ	0xFE3
  4042                           fsr1h	equ	0xFE2
  4043                           fsr1l	equ	0xFE1
  4044                           bsr	equ	0xFE0
  4045                           indf2	equ	0xFDF
  4046                           postinc2	equ	0xFDE
  4047                           postdec2	equ	0xFDD
  4048                           preinc2	equ	0xFDC
  4049                           plusw2	equ	0xFDB
  4050                           fsr2h	equ	0xFDA
  4051                           fsr2l	equ	0xFD9
  4052                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     42      73
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_print
    _tocarSom->_serialSend
    _lcdInit->_lcdCommand
    _checarLCD->_print
    _print->___awmod
    _lcdData->_digitalWrite
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    ___awmod->___awdiv
    _checarADC->_adc_amostra
    ___aldiv->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   15975
                                             35 COMRAM     7     7      0
                            ___aldiv
                             ___wmul
                          _checarADC
                          _checarLCD
                        _checarTimer
                         _kpDebounce
                             _kpInit
                             _kpRead
                            _lcdInit
                              _print
                         _serialInit
                          _timerInit
                         _timerReset
                          _timerWait
                           _tocarSom
 ---------------------------------------------------------------------------------
 (1) _tocarSom                                             1     1      0      30
                                              1 COMRAM     1     1      0
                         _serialSend
 ---------------------------------------------------------------------------------
 (2) _serialSend                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _timerWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timerReset                                           4     2      2     167
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serialInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    2339
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4     744
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          13    13      0     255
                                              0 COMRAM    13    13      0
 ---------------------------------------------------------------------------------
 (1) _checarTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checarLCD                                            0     0      0    5859
                              _print
 ---------------------------------------------------------------------------------
 (1) _print                                               21    19      2    5859
                                             14 COMRAM    21    19      2
                            ___awdiv
                            ___awmod
                         _lcdCommand
                            _lcdData
 ---------------------------------------------------------------------------------
 (2) _lcdData                                              2     2      0    1431
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    1535
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    1356
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      60
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1208
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _checarADC                                            0     0      0       0
                        _adc_amostra
 ---------------------------------------------------------------------------------
 (2) _adc_amostra                                          6     4      2       0
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     756
                                              6 COMRAM    14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
     ___wmul (ARG)
   ___wmul
   _checarADC
     _adc_amostra
   _checarLCD
     _print
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
       _lcdData
         _Delay40us
         _digitalWrite
   _checarTimer
   _kpDebounce
   _kpInit
   _kpRead
   _lcdInit
     _Delay2ms
       _Delay40us
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _pinMode
   _print
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _lcdData
       _Delay40us
       _digitalWrite
   _serialInit
   _timerInit
   _timerReset
   _timerWait
   _tocarSom
     _serialSend

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2A      49       1       57.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      49      15        0.0%
DATA                 0      0      49       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Dec 09 22:46:07 2020

                     l21 6FF8                       l18 6FBC                       l63 7858  
                     l97 7AA6                       u10 6EE4                       u11 6EE0  
           ___awdiv@sign 0006      ___wmul@multiplicand 0003     __size_of_adc_amostra 0044  
                    l120 75AC                      l131 760A                      l116 6E7C  
                    l212 6EA4                      l301 6F1A                      l134 6E72  
                    l223 6EFE                      l215 6EB6                      l152 6F36  
                    l128 75E6                      l240 6E8C                      l162 709E  
                    l147 6EE4                      l243 6F58                      l180 7D52  
                    l237 6E7E                      l246 6E68                      l159 71F0  
                    l191 7172                      l417 7470                      l338 6F7E  
                    l292 704A                      l285 6ECC                      l295 70D0  
                    l298 70FA                      l582 72A0                      l569 7364  
                    u220 6F36                      u221 6F32                      u710 74F4  
                    u711 74F0                      u704 74C0                      u800 6E8C  
                    u705 74BC                      u801 6E88                      u810 7008  
                    u730 7524                      u811 7004                      u731 7520  
                    u820 7022                      u724 750A                      u821 701E  
                    u725 7506                      u830 7046                      u831 7042  
                    u760 759A                      u744 7542                      u680 6EB2  
                    u761 7596                      u745 753C                      u681 6EAE  
                    u770 75AC                      u754 7572                      u771 75A8  
                    u755 756C                      u780 75D4                      u781 75D0  
                    u790 75F6                      u694 74A0                      u791 75F2  
                    u695 749C                      _bpm 003D             ___awmod@sign 000E  
                    wreg 000FE8                     l1011 6ECE                     l1017 6ED2  
                   l2001 6E74                     l1019 6ED4                     l2011 7130  
                   l2003 70FC                     l2101 741E                     l1061 6F1C  
                   l2021 7146                     l2013 7134                     l2005 7124  
                   l2111 7450                     l2103 742E                     l1071 6F26  
                   l2031 7160                     l2023 714A                     l2015 7138  
                   l2007 7128                     l2113 7460                     l2105 7430  
                   l2033 7166                     l2025 7150                     l2017 713C  
                   l2009 712C                     l2041 6F46                     l2201 7FF4  
                   l2121 7DA0                     l2107 743A                     l1067 6F20  
                   l2051 70AE                     l1323 7472                     l2035 716C  
                   l2027 7154                     l2019 7142                     l2043 6F4E  
                   l2131 7DCC                     l2123 7DAC                     l2109 7440  
                   l1069 6F24                     l2061 70EC                     l2053 70BC  
                   l1341 74D4                     l1333 748A                     l1325 7482  
                   l2029 715A                     l1413 6EE6                     l2045 6F52  
                   l2037 6F38                     l1317 6EA4                     l2133 7DD0  
                   l2141 7E02                     l2125 7DB0                     l2117 7D54  
                   l2063 70F8                     l2055 70C0                     l1351 74F8  
                   l1343 74D8                     l1335 74CC                     l1327 7486  
                   l1415 6EFA                     l2047 6F56                     l2039 6F42  
                   l1319 6EB2                     l2151 7E34                     l2143 7E06  
                   l2127 7DC0                     l2119 7D64                     l2081 738C  
                   l2073 7366                     l2065 6F00                     l2057 70CA  
                   l2049 70A0                     l1361 759A                     l1353 7524  
                   l1345 74F4                     l1417 6EFC                     l1433 6E62  
                   l1441 6EC6                     l2161 7E66                     l2153 7E3E  
                   l2145 7E16                     l2129 7DC4                     l2091 73D4  
                   l2083 739A                     l2075 736A                     l2067 6F5A  
                   l2059 70DE                     l1451 7026                     l1443 6FFA  
                   l1371 75DE                     l1363 759C                     l1355 7554  
                   l1435 6E66                     l1419 6E7E                     l2171 7E9A  
                   l2163 7E70                     l2155 7E48                     l2147 7E20  
                   l2139 7DD8                     l2093 73DC                     l2085 73AA  
                   l2077 7378                     l2069 6F76                     l1453 7032  
                   l1445 7008                     l1373 75F6                     l1365 75BC  
                   l1357 7588                     l1437 6EBA                     l2261 7FC6  
                   l2181 7EE6                     l2173 7EDA                     l2165 7E86  
                   l2157 7E52                     l2149 7E2A                     l2095 73E8  
                   l2087 73AE                     l2079 7388                     l1455 7046  
                   l1447 700C                     l1375 7602                     l1367 75D4  
                   l1359 758A                     l1439 6EC0                     l2263 7FD4  
                   l2183 7F02                     l2167 7E90                     l2159 7E5C  
                   l2255 7DEC                     l2097 73F6                     l2089 73BE  
                   l1801 72BC                     l1721 763A                     l1449 7022  
                   l1369 75DA                     l1377 6E6A                     l2265 7FE2  
                   l2257 7F6A                     l2185 7F0A                     l2169 7E98  
                   l2099 7400                     l1811 72E2                     l1803 72C0  
                   l1731 76D2                     l1723 765A                     l2267 7B3E  
                   l2259 7FB8                     l2187 7F20                     l2179 7EE2  
                   l1821 7318                     l1813 72F4                     l1805 72CE  
                   l1741 776C                     l1733 76F4                     l1725 767C  
                   l1717 760C                     l1901 795E                     l2189 7F28  
                   l2197 7F34                     l1823 732E                     l1815 72FC  
                   l1831 7344                     l1807 72D6                     l1751 7800  
                   l1743 7788                     l1735 7710                     l1727 7698  
                   l1719 7628                     l1911 79E8                     l1903 7970  
                   l2199 7FF0                     l1833 7354                     l1825 7336  
                   l1817 7304                     l1809 72DA                     l1841 71F6  
                   l1753 781A                     l1745 77A2                     l1737 772A  
                   l1729 76B2                     l1761 717E                     l1921 7A84  
                   l1913 7A0C                     l1905 7994                     l1835 735C  
                   l1827 7338                     l1819 7312                     l1851 7226  
                   l1843 7204                     l1755 783A                     l1747 77C2  
                   l1739 774A                     l1771 71C2                     l1763 7192  
                   l1923 7AA8                     l1915 7A32                     l1907 79BA  
                   l1829 733E                     l1861 726C                     l1853 7238  
                   l1845 720C                     l1749 77E4                     l1773 71D4  
                   l1765 7196                     l1757 7176                     l1781 7052  
                   l1941 7B16                     l1933 7AC4                     l1925 7ABA  
                   l1917 7A4E                     l1909 79D6                     l1871 7298  
                   l1863 7274                     l1855 7240                     l1847 7210  
                   l1839 71F2                     l1775 71E4                     l1767 71AA  
                   l1759 717A                     l1791 7096                     l1783 7056  
                   l1951 7B76                     l1935 7ADA                     l1927 7AC0  
                   l1919 7A60                     l1865 727A                     l1857 7248  
                   l1849 721E                     l1777 71EC                     l1769 71BE  
                   l1793 709A                     l1785 706A                     l1953 7B8A  
                   l1937 7AEE                     l1945 7B2A                     l1875 6FB6  
                   l1795 72A2                     l1859 7256                     l1867 7280  
                   l1787 706E                     l1779 704E                     l1971 7BD4  
                   l1963 7BA6                     l1955 7B9C                     l1939 7B02  
                   l1947 7B64                     l1891 78CA                     l1883 785A  
                   l1877 6FBA                     l1797 72A6                     l1869 7290  
                   l1789 7082                     l1981 7C98                     l1973 7BF0  
                   l1965 7BB8                     l1957 7BA2                     l1949 7B66  
                   l1893 78E6                     l1885 7876                     l1879 6FCA  
                   l1799 72B4                     l1991 7D2E                     l1983 7D18  
                   l1975 7C10                     l1967 7BBA                     l1895 78F8  
                   l1887 7888                     l1993 7D40                     l1977 7C2C  
                   l1985 7D2A                     l1969 7BCE                     l1897 791C  
                   l1889 78A8                     l1995 7D42                     l1979 7C7C  
                   l1899 7942                     u1200 7788                     u1120 7698  
                   u1104 764C                     u1201 7784                     u1121 7694  
                   u1105 7648                     u1210 77A2                     u1130 76B2  
                   u1114 766C                     u1211 779E                     u1131 76AE  
                   u1115 7668                     u1300 72B4                     u1301 72B0  
                   u1310 72CE                     u1311 72CA                     u1320 72F4  
                   u1400 726C                     u1240 7800                     u1224 77B4  
                   u1160 7710                     u1144 76C4                     u1080 7628  
                   u1321 72F0                     u1401 7268                     u1241 77FC  
                   u1225 77B0                     u1161 770C                     u1145 76C0  
                   u1081 7624                     u1330 7312                     u1410 7290  
                   u1250 781A                     u1234 77D4                     u1170 772A  
                   u1154 76E4                     u1090 763A                     u1331 730E  
                   u1411 728C                     u1251 7816                     u1235 77D0  
                   u1171 7726                     u1155 76E0                     u1091 7636  
                   u1420 6FCA                     u1340 732E                     u1421 6FC6  
                   u1341 732A                     u1350 7354                     u1351 7350  
                   u1360 7204                     u1264 782C                     u1184 773C  
                   u1280 71D4                     u1600 7A4E                     u1520 795E  
                   u1504 790E                     u1440 7876                     u1361 7200  
                   u1265 7828                     u1185 7738                     u1281 71D0  
                   u1601 7A4A                     u1521 795A                     u1505 790A  
                   u1441 7872                     u1370 721E                     u1274 784C  
                   u1194 775C                     u1290 71E4                     u1610 7A60  
                   u1530 7970                     u1514 7932                     u1450 7888  
                   u1435 6FD2                     u1371 721A                     u1275 7848  
                   u1195 7758                     u1291 71E0                     u1611 7A5C  
                   u1531 796C                     u1515 792E                     u1451 7884  
                   u1380 7238                     u1700 7C2C                     u1381 7234  
                   u1701 7C28                     u1390 7256                     u1710 7C98  
                   u1391 7252                     u1711 7C94                     u1800 73F6  
                   u1720 7D52                     u1624 7A76                     u1560 79D6  
                   u1544 7986                     u1480 78E6                     u1464 789A  
                   u1801 73F2                     u1721 7D4E                     u1641 7AB2  
                   u1625 7A72                     u1561 79D2                     u1545 7982  
                   u1481 78E2                     u1465 7896                     u1810 741E  
                   u1650 7B76                     u1730 70AE                     u1634 7A9A  
                   u1570 79E8                     u1554 79AA                     u1490 78F8  
                   u1474 78BA                     u1811 741A                     u1651 7B72  
                   u1731 70AA                     u1635 7A96                     u1571 79E4  
                   u1555 79A6                     u1491 78F4                     u1475 78B6  
                   u1820 7450                     u1660 7B8A                     u1740 70BC  
                   u1821 744C                     u1661 7B86                     u1741 70B8  
                   u1750 70DE                     u1830 7E86                     u1671 7B94  
                   u1751 70DA                     u1831 7E82                     u1680 7BCA  
                   u1760 70EC                     u1584 79FE                     u1840 7F02  
                   u1681 7BC6                     u1761 70E8                     u1585 79FA  
                   u1841 7EFE                     u1770 7378                     u1690 7BF0  
                   u1594 7A22                     u1850 7F20                     u1771 7374  
                   u1691 7BEC                     u1595 7A1E                     u1851 7F1C  
                   u1780 739A                     u1781 7396                     u1790 73D4  
                   u1791 73D0                     _PIR1 000F9E                     _flag 003C  
                   _main 7D54                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___param_bank 000000          __end_of___aldiv 7472  
                  ?_main 0001          __end_of___awdiv 7366          __end_of___awmod 72A2  
                  _T0CON 000FD5          ___awdiv@divisor 0003          ___awdiv@counter 0005  
                  _RCREG 000FAE                    _RCSTA 000FAB                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _SPBRG 000FAF                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
                  _TXREG 000FAD                    _TXSTA 000FAC          __end_of_lcdData 70A0  
   __size_of_checarTimer 0052          __end_of_lcdInit 7174          __end_of_pinMode 7AA8  
                  _valor 0043                    _tempo 0049                    _print 7AA8  
                  main@i 0029                    main@n 0028                    tablat 000FF5  
                  plusw1 000FE3                    plusw2 000FDB                    status 000FD8  
       __end_of_Delay2ms 6F38     __end_of_digitalWrite 785A          __initialization 6F80  
           __end_of_main 8000       __size_of_Delay40us 0018                   ??_main 0024  
          __activetblptr 000002                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 0001                   ?_print 000F                   _INTCON 000FF2  
                 _SPBRGH 000FB0                ??___aldiv 000F                   ___wmul 6F5A  
              ??___awdiv 0005                ??___awmod 000D                   _kpInit 6E6A  
                 _kpRead 6E74                   clear_0 6FA6         ___awdiv@quotient 0007  
        ___awmod@divisor 000B                ??_lcdData 0007                ??_lcdInit 0009  
        ___awmod@counter 000D             __pdataCOMRAM 002B                ??_pinMode 0005  
       __end_of_tocarSom 6ECE                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                   print@i 0023           _countMetronMax 003F  
      __end_of_Delay40us 6EE6               __accesstop 0080  __end_of__initialization 6FAC  
          ___rparam_used 000001              pinMode@type 0003           __pcstackCOMRAM 0001  
     __size_of_checarADC 001C       __size_of_checarLCD 005C            __end_of_print 7D54  
              ?_Delay2ms 0001                  ??_print 0011    __size_of_digitalWrite 024E  
             _lcdCommand 7174                  ?___wmul 0001            ??_adc_amostra 0003  
                ?_kpInit 0001                  ?_kpRead 0001                  _BAUDCON 000FB8  
             _kpDebounce 7472       __size_of_timerInit 0008       __size_of_timerWait 0010  
             ??_Delay2ms 0002             _digitalWrite 760C        __end_of_checarADC 6F1C  
      __end_of_checarLCD 70FC                  __Hparam 0000                  __Lparam 0000  
              ?_tocarSom 0001                  ___aldiv 7366                  ___awdiv 72A2  
                ___awmod 71F2          __size_of___wmul 0026          __size_of_kpInit 000A  
        __size_of_kpRead 000A                  __pcinit 6F80                  _lcdData 704C  
                __ramtop 0600                  _lcdInit 70FC                  __ptext0 7D54  
                __ptext1 6EB8                  __ptext2 6EA2                  __ptext3 6E7E  
                __ptext4 6F38                  __ptext5 6E62                  __ptext6 6EE6  
                __ptext7 70FC                  __ptext8 785A                  __ptext9 6E74  
          ??_checarTimer 0001      kpDebounce@old_portB 0007      kpDebounce@old_portD 0006  
    kpDebounce@old_trisB 0009      kpDebounce@old_trisD 0008      __end_of_adc_amostra 6FFA  
                _pinMode 785A         ___awmod@dividend 0009              serialSend@c 0001  
       ___aldiv@dividend 0007                Delay2ms@i 0002     end_of_initialization 6FAC  
          __Lmediumconst 0000        __end_of_timerInit 6E6A        __end_of_timerWait 6E8E  
             _serialInit 6EE6               _serialSend 6EA2               ??_tocarSom 0002  
       ___aldiv@quotient 0011                  postdec1 000FE5              ?_lcdCommand 0001  
                postinc0 000FEE               _timerReset 6F38              ?_kpDebounce 0001  
            tocarSom@key 0002      __end_of_checarTimer 704C                _Delay40us 6ECE  
            _adc_amostra 6FB6           __end_of___wmul 6F80            __pidataCOMRAM 6E8E  
         __end_of_kpInit 6E74           __end_of_kpRead 6E7E      start_initialization 6F80  
      __size_of_Delay2ms 001C      __size_of_lcdCommand 007E      __size_of_kpDebounce 019A  
             ?_Delay40us 0001              ?_serialInit 0001              ?_serialSend 0001  
               ??___wmul 0005                 ??_kpInit 0001                 ??_kpRead 0003  
            ?_timerReset 0001              _checarTimer 6FFA              __pbssCOMRAM 003F  
             pinMode@pin 0001                _checarADC 6F00                _checarLCD 70A0  
               ?___aldiv 0007                 ?___awdiv 0001                 ?___awmod 0009  
      __size_of_tocarSom 0016                 ?_lcdData 0001                 ?_lcdInit 0001  
          lcdCommand@cmd 0008                 ?_pinMode 0001      __size_of_serialInit 001A  
    __size_of_serialSend 0016           __size_of_print 02AC          ___aldiv@divisor 000B  
        ___aldiv@counter 000F               ?_checarADC 0001      __size_of_timerReset 0022  
             ?_checarLCD 0001              ??_Delay40us 0001           ___wmul@product 0005  
             print@F2423 002B               print@F2425 0036                _valorNovo 0047  
           ??_lcdCommand 0007                _timerInit 6E62                _timerWait 6E7E  
           ??_kpDebounce 0001               _ADCON0bits 000FC2        ___wmul@multiplier 0001  
       main@valorTeclado 0026          lcdCommand@old_D 0007                 _Delay2ms 6F1C  
       timerReset@ciclos 0003                copy_data0 6F94              _countMetron 0041  
     __end_of_lcdCommand 71F2             lcdData@old_D 0008             lcdData@valor 0007  
     __end_of_kpDebounce 760C                 __Hrparam 0000                 __Lrparam 0000  
             ?_timerInit 0001               ?_timerWait 0001             ?_adc_amostra 0001  
       __size_of___aldiv 010C         __size_of___awdiv 00C4         __size_of___awmod 00B0  
       __size_of_lcdData 0054         __size_of_lcdInit 0078         __size_of_pinMode 024E  
               __ptext10 6E6A                 __ptext11 7472                 __ptext20 71F2  
               __ptext12 6FFA                 __ptext21 72A2                 __ptext13 70A0  
               __ptext22 6F00                 __ptext14 7AA8                 __ptext23 6FB6  
               __ptext15 704C                 __ptext24 6F5A                 __ptext16 7174  
               __ptext25 7366                 __ptext17 760C                 __ptext18 6F1C  
               __ptext19 6ECE              ??_checarADC 0007              ??_checarLCD 0024  
          __size_of_main 02AC             ??_serialInit 0001             ??_serialSend 0001  
             Delay40us@i 0001                 _tocarSom 6EB8                 _velocity 003B  
              print@admt 000F             ??_timerReset 0003             ?_checarTimer 0001  
        timerReset@tempo 0001            ?_digitalWrite 0001       __end_of_serialInit 6F00  
     __end_of_serialSend 6EB8        digitalWrite@value 0003       __end_of_timerReset 6F5A  
               print@off 0013                 print@msg 0018              ??_timerInit 0001  
            _valorAntigo 0045              ??_timerWait 0001              kpDebounce@i 000D  
            kpDebounce@j 000C              kpDebounce@k 000A           ??_digitalWrite 0005  
           ___aldiv@sign 0010          digitalWrite@pin 0001  
